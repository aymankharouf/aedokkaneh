[{"C:\\projects\\aedokkaneh\\src\\service-worker.js":"1","C:\\projects\\aedokkaneh\\src\\pages\\store-balance-trans.js":"2","C:\\projects\\aedokkaneh\\src\\pages\\store-balance.js":"3","C:\\projects\\aedokkaneh\\src\\pages\\notify-friends.js":"4","C:\\projects\\aedokkaneh\\src\\pages\\archived-products.js":"5","C:\\projects\\aedokkaneh\\src\\pages\\archived-stock-trans.js":"6","C:\\projects\\aedokkaneh\\src\\pages\\archived-purchases.js":"7","C:\\projects\\aedokkaneh\\src\\pages\\order-request-details.js":"8","C:\\projects\\aedokkaneh\\src\\pages\\purchase-plan.js":"9","C:\\projects\\aedokkaneh\\src\\pages\\store-trans.js":"10","C:\\projects\\aedokkaneh\\src\\pages\\archived-orders.js":"11","C:\\projects\\aedokkaneh\\src\\pages\\prepare-orders-list.js":"12","C:\\projects\\aedokkaneh\\src\\pages\\prepare-orders.js":"13","C:\\projects\\aedokkaneh\\src\\pages\\order-requests.js":"14","C:\\projects\\aedokkaneh\\src\\pages\\pack-trans.js":"15","C:\\projects\\aedokkaneh\\src\\pages\\ratings.js":"16","C:\\projects\\aedokkaneh\\src\\pages\\approvals.js":"17","C:\\projects\\aedokkaneh\\src\\pages\\edit-order.js":"18","C:\\projects\\aedokkaneh\\src\\pages\\monthly-trans.js":"19","C:\\projects\\aedokkaneh\\src\\pages\\monthly-trans-call.js":"20","C:\\projects\\aedokkaneh\\src\\pages\\offers.js":"21","C:\\projects\\aedokkaneh\\src\\pages\\alarm-details.js":"22","C:\\projects\\aedokkaneh\\src\\pages\\alarms.js":"23","C:\\projects\\aedokkaneh\\src\\data\\actions.js":"24","C:\\projects\\aedokkaneh\\src\\pages\\stock-trans-details.js":"25","C:\\projects\\aedokkaneh\\src\\pages\\stock-trans.js":"26","C:\\projects\\aedokkaneh\\src\\pages\\stock.js":"27","C:\\projects\\aedokkaneh\\src\\pages\\stock-pack-trans.js":"28","C:\\projects\\aedokkaneh\\src\\pages\\requested-packs.js":"29","C:\\projects\\aedokkaneh\\src\\pages\\requested-pack-details.js":"30","C:\\projects\\aedokkaneh\\src\\pages\\orders.js":"31","C:\\projects\\aedokkaneh\\src\\pages\\orders-list.js":"32","C:\\projects\\aedokkaneh\\src\\pages\\add-store-payment.js":"33","C:\\projects\\aedokkaneh\\src\\pages\\order-details.js":"34","C:\\projects\\aedokkaneh\\src\\pages\\panel.js":"35","C:\\projects\\aedokkaneh\\src\\index.tsx":"36","C:\\projects\\aedokkaneh\\src\\app.tsx":"37","C:\\projects\\aedokkaneh\\src\\routes.ts":"38","C:\\projects\\aedokkaneh\\src\\data\\config.ts":"39","C:\\projects\\aedokkaneh\\src\\data\\labels.ts":"40","C:\\projects\\aedokkaneh\\src\\data\\firebase.ts":"41","C:\\projects\\aedokkaneh\\src\\data\\reducer.ts":"42","C:\\projects\\aedokkaneh\\src\\data\\store.tsx":"43","C:\\projects\\aedokkaneh\\src\\pages\\countries.tsx":"44","C:\\projects\\aedokkaneh\\src\\pages\\edit-country.tsx":"45","C:\\projects\\aedokkaneh\\src\\pages\\add-country.tsx":"46","C:\\projects\\aedokkaneh\\src\\data\\actionst.ts":"47","C:\\projects\\aedokkaneh\\src\\pages\\add-location.tsx":"48","C:\\projects\\aedokkaneh\\src\\pages\\edit-location.tsx":"49","C:\\projects\\aedokkaneh\\src\\pages\\locations.tsx":"50","C:\\projects\\aedokkaneh\\src\\pages\\logs.tsx":"51","C:\\projects\\aedokkaneh\\src\\pages\\edit-advert.tsx":"52","C:\\projects\\aedokkaneh\\src\\pages\\adverts.tsx":"53","C:\\projects\\aedokkaneh\\src\\pages\\add-advert.tsx":"54","C:\\projects\\aedokkaneh\\src\\pages\\advert-details.tsx":"55","C:\\projects\\aedokkaneh\\src\\pages\\edit-category.tsx":"56","C:\\projects\\aedokkaneh\\src\\pages\\categories.tsx":"57","C:\\projects\\aedokkaneh\\src\\pages\\add-category.tsx":"58","C:\\projects\\aedokkaneh\\src\\pages\\permission-list.tsx":"59","C:\\projects\\aedokkaneh\\src\\pages\\register.tsx":"60","C:\\projects\\aedokkaneh\\src\\pages\\permit-user.tsx":"61","C:\\projects\\aedokkaneh\\src\\pages\\retreive-password.tsx":"62","C:\\projects\\aedokkaneh\\src\\pages\\new-users.tsx":"63","C:\\projects\\aedokkaneh\\src\\pages\\password-requests.tsx":"64","C:\\projects\\aedokkaneh\\src\\pages\\login.tsx":"65","C:\\projects\\aedokkaneh\\src\\pages\\approve-user.tsx":"66","C:\\projects\\aedokkaneh\\src\\pages\\customer-details.tsx":"67","C:\\projects\\aedokkaneh\\src\\pages\\customers.tsx":"68","C:\\projects\\aedokkaneh\\src\\pages\\edit-customer.tsx":"69","C:\\projects\\aedokkaneh\\src\\pages\\store-details.tsx":"70","C:\\projects\\aedokkaneh\\src\\pages\\edit-store.tsx":"71","C:\\projects\\aedokkaneh\\src\\pages\\add-store.tsx":"72","C:\\projects\\aedokkaneh\\src\\pages\\stores.tsx":"73","C:\\projects\\aedokkaneh\\src\\pages\\edit-bulk.tsx":"74","C:\\projects\\aedokkaneh\\src\\pages\\add-bulk.tsx":"75","C:\\projects\\aedokkaneh\\src\\pages\\product-details.tsx":"76","C:\\projects\\aedokkaneh\\src\\pages\\edit-offer.tsx":"77","C:\\projects\\aedokkaneh\\src\\pages\\add-offer.tsx":"78","C:\\projects\\aedokkaneh\\src\\pages\\add-pack-store.tsx":"79","C:\\projects\\aedokkaneh\\src\\pages\\store-owners.tsx":"80","C:\\projects\\aedokkaneh\\src\\pages\\pack-details.tsx":"81","C:\\projects\\aedokkaneh\\src\\pages\\edit-pack.tsx":"82","C:\\projects\\aedokkaneh\\src\\pages\\add-pack.tsx":"83","C:\\projects\\aedokkaneh\\src\\pages\\edit-price.tsx":"84","C:\\projects\\aedokkaneh\\src\\pages\\add-product.tsx":"85","C:\\projects\\aedokkaneh\\src\\pages\\edit-product.tsx":"86","C:\\projects\\aedokkaneh\\src\\pages\\add-store-pack.tsx":"87","C:\\projects\\aedokkaneh\\src\\pages\\product-packs.tsx":"88","C:\\projects\\aedokkaneh\\src\\pages\\products.tsx":"89","C:\\projects\\aedokkaneh\\src\\pages\\change-password.tsx":"90","C:\\projects\\aedokkaneh\\src\\pages\\notifications.tsx":"91","C:\\projects\\aedokkaneh\\src\\pages\\add-notification.tsx":"92","C:\\projects\\aedokkaneh\\src\\pages\\settings.tsx":"93","C:\\projects\\aedokkaneh\\src\\pages\\home.tsx":"94","C:\\projects\\aedokkaneh\\src\\pages\\not-found-page.tsx":"95","C:\\projects\\aedokkaneh\\src\\pages\\rating-stars.tsx":"96","C:\\projects\\aedokkaneh\\src\\pages\\spendings.tsx":"97","C:\\projects\\aedokkaneh\\src\\pages\\add-spending.tsx":"98","C:\\projects\\aedokkaneh\\src\\pages\\edit-spending.tsx":"99","C:\\projects\\aedokkaneh\\src\\pages\\bottom-toolbar.tsx":"100","C:\\projects\\aedokkaneh\\src\\pages\\invitation-details.tsx":"101","C:\\projects\\aedokkaneh\\src\\pages\\invitations.tsx":"102","C:\\projects\\aedokkaneh\\src\\pages\\basket.tsx":"103","C:\\projects\\aedokkaneh\\src\\pages\\confirm-purchase.tsx":"104","C:\\projects\\aedokkaneh\\src\\pages\\purchase-details.tsx":"105","C:\\projects\\aedokkaneh\\src\\pages\\purchases.tsx":"106","C:\\projects\\aedokkaneh\\src\\pages\\store-packs.tsx":"107","C:\\projects\\aedokkaneh\\src\\pages\\return-basket.tsx":"108"},{"size":5477,"mtime":1623950524390,"results":"109","hashOfConfig":"110"},{"size":3011,"mtime":1624430374822,"results":"111","hashOfConfig":"110"},{"size":1721,"mtime":1624429094909,"results":"112","hashOfConfig":"110"},{"size":2250,"mtime":1624430543365,"results":"113","hashOfConfig":"110"},{"size":3570,"mtime":1624429652603,"results":"114","hashOfConfig":"110"},{"size":2793,"mtime":1624430617008,"results":"115","hashOfConfig":"110"},{"size":3120,"mtime":1624430620364,"results":"116","hashOfConfig":"110"},{"size":4585,"mtime":1624430538316,"results":"117","hashOfConfig":"110"},{"size":2953,"mtime":1624429094893,"results":"118","hashOfConfig":"110"},{"size":2095,"mtime":1624429094909,"results":"119","hashOfConfig":"110"},{"size":3207,"mtime":1624430623901,"results":"120","hashOfConfig":"110"},{"size":2437,"mtime":1624430528458,"results":"121","hashOfConfig":"110"},{"size":2313,"mtime":1624429094893,"results":"122","hashOfConfig":"110"},{"size":2033,"mtime":1624429094878,"results":"123","hashOfConfig":"110"},{"size":1922,"mtime":1624429094878,"results":"124","hashOfConfig":"110"},{"size":2167,"mtime":1624430510228,"results":"125","hashOfConfig":"110"},{"size":3349,"mtime":1624429094831,"results":"126","hashOfConfig":"110"},{"size":4874,"mtime":1624429860460,"results":"127","hashOfConfig":"110"},{"size":9389,"mtime":1624430548010,"results":"128","hashOfConfig":"110"},{"size":1334,"mtime":1624429094862,"results":"129","hashOfConfig":"110"},{"size":3439,"mtime":1624429652598,"results":"130","hashOfConfig":"110"},{"size":5950,"mtime":1624430629192,"results":"131","hashOfConfig":"110"},{"size":2148,"mtime":1624429094831,"results":"132","hashOfConfig":"110"},{"size":74307,"mtime":1624456907150,"results":"133","hashOfConfig":"110"},{"size":2018,"mtime":1624429094909,"results":"134","hashOfConfig":"110"},{"size":1989,"mtime":1624430379915,"results":"135","hashOfConfig":"110"},{"size":2781,"mtime":1624429094909,"results":"136","hashOfConfig":"110"},{"size":5737,"mtime":1624429860462,"results":"137","hashOfConfig":"110"},{"size":2560,"mtime":1624429094893,"results":"138","hashOfConfig":"110"},{"size":9668,"mtime":1624429860462,"results":"139","hashOfConfig":"110"},{"size":2271,"mtime":1624430532907,"results":"140","hashOfConfig":"110"},{"size":2757,"mtime":1624429094878,"results":"141","hashOfConfig":"110"},{"size":3994,"mtime":1624430637531,"results":"142","hashOfConfig":"110"},{"size":8960,"mtime":1624429860461,"results":"143","hashOfConfig":"110"},{"size":3190,"mtime":1624436091534,"results":"144","hashOfConfig":"110"},{"size":845,"mtime":1624434287531,"results":"145","hashOfConfig":"110"},{"size":543,"mtime":1624434484702,"results":"146","hashOfConfig":"110"},{"size":11731,"mtime":1624434308866,"results":"147","hashOfConfig":"110"},{"size":3503,"mtime":1624434322085,"results":"148","hashOfConfig":"110"},{"size":17091,"mtime":1624435476834,"results":"149","hashOfConfig":"110"},{"size":656,"mtime":1624436167839,"results":"150","hashOfConfig":"110"},{"size":9411,"mtime":1624673696239,"results":"151","hashOfConfig":"110"},{"size":14763,"mtime":1624673304877,"results":"152","hashOfConfig":"110"},{"size":1316,"mtime":1624438836542,"results":"153","hashOfConfig":"110"},{"size":2516,"mtime":1624439599069,"results":"154","hashOfConfig":"110"},{"size":1673,"mtime":1624438791926,"results":"155","hashOfConfig":"110"},{"size":55210,"mtime":1624674305091,"results":"156","hashOfConfig":"110"},{"size":2380,"mtime":1624439559009,"results":"157","hashOfConfig":"110"},{"size":3019,"mtime":1624439763454,"results":"158","hashOfConfig":"110"},{"size":1383,"mtime":1624439228548,"results":"159","hashOfConfig":"110"},{"size":2383,"mtime":1624440176299,"results":"160","hashOfConfig":"110"},{"size":3196,"mtime":1624452383739,"results":"161","hashOfConfig":"110"},{"size":3515,"mtime":1624443240608,"results":"162","hashOfConfig":"110"},{"size":3329,"mtime":1624442323394,"results":"163","hashOfConfig":"110"},{"size":1156,"mtime":1624442657757,"results":"164","hashOfConfig":"110"},{"size":4000,"mtime":1624452322310,"results":"165","hashOfConfig":"110"},{"size":4258,"mtime":1624445322833,"results":"166","hashOfConfig":"110"},{"size":1769,"mtime":1624444668792,"results":"167","hashOfConfig":"110"},{"size":3607,"mtime":1624601389569,"results":"168","hashOfConfig":"110"},{"size":1785,"mtime":1624446052842,"results":"169","hashOfConfig":"110"},{"size":3685,"mtime":1624447554101,"results":"170","hashOfConfig":"110"},{"size":2274,"mtime":1624446548841,"results":"171","hashOfConfig":"110"},{"size":1464,"mtime":1624447693308,"results":"172","hashOfConfig":"110"},{"size":1466,"mtime":1624446227985,"results":"173","hashOfConfig":"110"},{"size":1926,"mtime":1624446018905,"results":"174","hashOfConfig":"110"},{"size":4384,"mtime":1624451895026,"results":"175","hashOfConfig":"110"},{"size":4790,"mtime":1624451893907,"results":"176","hashOfConfig":"110"},{"size":2029,"mtime":1624451895906,"results":"177","hashOfConfig":"110"},{"size":6195,"mtime":1624453538056,"results":"178","hashOfConfig":"110"},{"size":3938,"mtime":1624456462138,"results":"179","hashOfConfig":"110"},{"size":6265,"mtime":1624457493852,"results":"180","hashOfConfig":"110"},{"size":5383,"mtime":1624457262564,"results":"181","hashOfConfig":"110"},{"size":2806,"mtime":1624455600482,"results":"182","hashOfConfig":"110"},{"size":5976,"mtime":1624599087690,"results":"183","hashOfConfig":"110"},{"size":6401,"mtime":1624598668821,"results":"184","hashOfConfig":"110"},{"size":2095,"mtime":1624469747239,"results":"185","hashOfConfig":"110"},{"size":8771,"mtime":1624599340192,"results":"186","hashOfConfig":"110"},{"size":9039,"mtime":1624598405577,"results":"187","hashOfConfig":"110"},{"size":4983,"mtime":1624600124161,"results":"188","hashOfConfig":"110"},{"size":1316,"mtime":1624458343612,"results":"189","hashOfConfig":"110"},{"size":10744,"mtime":1624671126152,"results":"190","hashOfConfig":"110"},{"size":5278,"mtime":1624599474865,"results":"191","hashOfConfig":"110"},{"size":5404,"mtime":1624598409824,"results":"192","hashOfConfig":"110"},{"size":4399,"mtime":1624601175538,"results":"193","hashOfConfig":"110"},{"size":5477,"mtime":1624466576332,"results":"194","hashOfConfig":"110"},{"size":6145,"mtime":1624469379216,"results":"195","hashOfConfig":"110"},{"size":4779,"mtime":1624600305505,"results":"196","hashOfConfig":"110"},{"size":4440,"mtime":1624470344220,"results":"197","hashOfConfig":"110"},{"size":4132,"mtime":1624466321146,"results":"198","hashOfConfig":"110"},{"size":1970,"mtime":1624639943986,"results":"199","hashOfConfig":"110"},{"size":2928,"mtime":1624641388655,"results":"200","hashOfConfig":"110"},{"size":2744,"mtime":1624640978065,"results":"201","hashOfConfig":"110"},{"size":1081,"mtime":1624639681357,"results":"202","hashOfConfig":"110"},{"size":1636,"mtime":1624639982740,"results":"203","hashOfConfig":"110"},{"size":356,"mtime":1624639874716,"results":"204","hashOfConfig":"110"},{"size":1151,"mtime":1624639843406,"results":"205","hashOfConfig":"110"},{"size":1751,"mtime":1624641802368,"results":"206","hashOfConfig":"110"},{"size":3802,"mtime":1624642012311,"results":"207","hashOfConfig":"110"},{"size":4853,"mtime":1624642573714,"results":"208","hashOfConfig":"110"},{"size":1150,"mtime":1624645201398,"results":"209","hashOfConfig":"110"},{"size":2930,"mtime":1624648795956,"results":"210","hashOfConfig":"110"},{"size":1634,"mtime":1624648158379,"results":"211","hashOfConfig":"110"},{"size":3151,"mtime":1624650786158,"results":"212","hashOfConfig":"110"},{"size":3385,"mtime":1624671491747,"results":"213","hashOfConfig":"110"},{"size":4026,"mtime":1624670834611,"results":"214","hashOfConfig":"110"},{"size":1996,"mtime":1624668562275,"results":"215","hashOfConfig":"110"},{"size":3917,"mtime":1624670814883,"results":"216","hashOfConfig":"110"},{"size":4778,"mtime":1624674060607,"results":"217","hashOfConfig":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},"chij1t",{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"291"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"291"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"291"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"291"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"291"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"291"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\aedokkaneh\\src\\service-worker.js",[],["442","443"],"C:\\projects\\aedokkaneh\\src\\pages\\store-balance-trans.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\store-balance.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\notify-friends.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\archived-products.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\archived-stock-trans.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\archived-purchases.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\order-request-details.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\purchase-plan.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\store-trans.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\archived-orders.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\prepare-orders-list.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\prepare-orders.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\order-requests.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\pack-trans.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\ratings.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\approvals.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-order.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\monthly-trans.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\monthly-trans-call.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\offers.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\alarm-details.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\alarms.js",[],"C:\\projects\\aedokkaneh\\src\\data\\actions.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\stock-trans-details.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\stock-trans.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\stock.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\stock-pack-trans.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\requested-packs.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\requested-pack-details.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\orders.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\orders-list.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-store-payment.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\order-details.js",[],"C:\\projects\\aedokkaneh\\src\\pages\\panel.js",[],"C:\\projects\\aedokkaneh\\src\\index.tsx",[],["444","445"],"C:\\projects\\aedokkaneh\\src\\app.tsx",[],"C:\\projects\\aedokkaneh\\src\\routes.ts",[],"C:\\projects\\aedokkaneh\\src\\data\\config.ts",[],"C:\\projects\\aedokkaneh\\src\\data\\labels.ts",[],"C:\\projects\\aedokkaneh\\src\\data\\firebase.ts",[],"C:\\projects\\aedokkaneh\\src\\data\\reducer.ts",["446","447","448","449","450"],"import { iState, iAction } from './interfaces'\r\n\r\nconst Reducer = (state: iState, action: iAction) => {\r\n    let pack, packIndex, packs, nextQuantity, i\r\n    const increment = [0.125, 0.25, 0.5, 0.75, 1]\r\n    switch (action.type){\r\n      case 'ADD_TO_BASKET':\r\n        pack = {\r\n          packId: action.payload.pack.id,\r\n          productName: action.payload.pack.productName,\r\n          productAlias: action.payload.pack.productAlias,\r\n          packName: action.payload.pack.name,\r\n          imageUrl: action.payload.pack.imageUrl,\r\n          price: action.payload.price,\r\n          quantity: action.payload.quantity,\r\n          actual: action.payload.packStore.price,\r\n          cost: action.payload.packStore.cost,\r\n          requested: action.payload.quantity,\r\n          orderId: action.payload.orderId,\r\n          weight: action.payload.weight,\r\n          isOffer: action.payload.packStore.isOffer,\r\n          exceedPriceType: action.payload.exceedPriceType,\r\n          isDivided: action.payload.pack.isDivided,\r\n          closeExpired: action.payload.pack.closeExpired,\r\n          refPackId: action.payload.refPackId,\r\n          refPackQuantity: action.payload.refPackQuantity\r\n        }\r\n        if (!state.basket?.storeId) {\r\n          return {...state, basket: {storeId: action.payload.packStore.storeId, packs: [pack]}}\r\n        } else {\r\n          return {...state, basket: {...state.basket, packs: [...state.basket.packs, pack]}}\r\n        }\r\n      case 'INCREASE_QUANTITY':\r\n        pack = {\r\n          ...action.payload,\r\n          quantity: action.payload.quantity + 1\r\n        }\r\n        packs = state.basket?.packs.slice()\r\n        if (!packs) return state\r\n        packIndex = packs.findIndex(p => p.packId === action.payload.packId)\r\n        packs.splice(packIndex, 1, pack)\r\n        return {...state, basket: {...state.basket!, packs}}\r\n      case 'DECREASE_QUANTITY':\r\n        packs = state.basket?.packs.slice()\r\n        if (!packs) return state\r\n        if (action.payload.isDivided) {\r\n          nextQuantity = 0\r\n          packIndex = packs.findIndex(p => p.packId === action.payload.packId && p.orderId === action.payload.orderId)\r\n        } else {\r\n          nextQuantity = action.payload.quantity - 1\r\n          packIndex = packs.findIndex(p => p.packId === action.payload.packId)\r\n        }\r\n        if (nextQuantity === 0) {\r\n          packs.splice(packIndex, 1)\r\n          if (packs.length === 0){\r\n            return {...state, basket: undefined}\r\n          }\r\n        } else {\r\n          pack = {\r\n            ...action.payload,\r\n            quantity: nextQuantity\r\n          }\r\n          packs.splice(packIndex, 1, pack)\r\n        }\r\n        return {...state, basket: {...state.basket!, packs}}\r\n      case 'CLEAR_BASKET':\r\n        return {...state, basket: undefined}\r\n      case 'LOAD_ORDER_BASKET':\r\n        // return {\r\n        //   ...state,\r\n        //   orderBasket: action.params.order.basket.map(p => {\r\n        //     return {\r\n        //       ...p,\r\n        //       quantity: action.params.type === 'e' ? p.quantity : p.purchased,\r\n        //       oldQuantity: action.params.type === 'e' ? p.quantity : p.purchased\r\n        //     }\r\n        //   })\r\n        // }\r\n      case 'CLEAR_ORDER_BASKET':\r\n        return {...state, orderBasket: undefined}\r\n      case 'INCREASE_ORDER_QUANTITY':\r\n        // if (action.pack.packInfo.isDivided) {\r\n        //   if (action.pack.quantity >= 1) {\r\n        //     nextQuantity = action.pack.quantity + 0.5\r\n        //   } else {\r\n        //     i = increment.indexOf(action.pack.quantity)\r\n        //     nextQuantity = increment[++i]  \r\n        //   }\r\n        // } else {\r\n        //   nextQuantity = action.pack.quantity + 1\r\n        // }\r\n        // pack = {\r\n        //   ...action.pack,\r\n        //   quantity: nextQuantity,\r\n        //   gross: Math.round((action.pack.actual || action.pack.price) * nextQuantity)\r\n        // }\r\n        // packs = state.orderBasket.slice()\r\n        // packIndex = packs.findIndex(p => p.packId === action.pack.packId)\r\n        // packs.splice(packIndex, 1, pack)  \r\n        // return {...state, orderBasket: packs}\r\n      case 'DECREASE_ORDER_QUANTITY':\r\n        // if (action.params.pack.weight) {\r\n        //   if (action.params.type === 'r') {\r\n        //     nextQuantity = 0\r\n        //   } else {\r\n        //     if (action.params.pack.quantity > action.params.pack.purchased) {\r\n        //       nextQuantity = action.params.pack.purchased\r\n        //     } else {\r\n        //       nextQuantity = 0\r\n        //     }  \r\n        //   }\r\n        // } else if (action.params.pack.packInfo.isDivided) {\r\n        //   if (action.params.pack.quantity > 1) {\r\n        //     nextQuantity = action.params.pack.quantity - 0.5\r\n        //   } else {\r\n        //     i = increment.indexOf(action.params.pack.quantity)\r\n        //     nextQuantity = i === 0 ? increment[0] : increment[--i]  \r\n        //   }\r\n        // } else {\r\n        //   nextQuantity = action.params.pack.quantity - 1\r\n        // }\r\n        // pack = {\r\n        //   ...action.params.pack,\r\n        //   quantity: nextQuantity,\r\n        //   gross: Math.round((action.params.pack.actual || action.params.pack.price) * nextQuantity)\r\n        // }  \r\n        // packs = state.orderBasket.slice()\r\n        // packIndex = packs.findIndex(p => p.packId === action.params.pack.packId)\r\n        // packs.splice(packIndex, 1, pack)  \r\n        // return {...state, orderBasket: packs}\r\n      case 'ADD_TO_RETURN_BASKET':\r\n        pack = {\r\n          packId: action.payload.packId,\r\n          cost: action.payload.cost,\r\n          price: action.payload.price,\r\n          actual: action.payload.price,\r\n          quantity: action.payload.quantity,\r\n          weight: action.payload.weight\r\n        }\r\n        if (!state.returnBasket?.type) {\r\n          return {\r\n            ...state, \r\n            returnBasket: {\r\n              storeId: action.payload.storeId, \r\n              type: action.payload.type, \r\n              purchaseId: action.payload.purchaseId, \r\n              packs: [pack]\r\n            }\r\n          }\r\n        } else {\r\n          return {...state, returnBasket: {...state.returnBasket!, packs: [...state.returnBasket.packs, pack]}}\r\n        }\r\n      case 'REMOVE_FROM_RETURN_BASKET':\r\n        const basket = state.returnBasket?.packs.slice()\r\n        if (!basket) return state\r\n        packIndex = basket.findIndex(p => p.packId === action.payload.packId)\r\n        basket.splice(packIndex, 1)\r\n        if (basket.length === 0) {\r\n          return {...state, returnBasket: undefined}\r\n        } else {\r\n          return {...state, returnBasket: {...state.returnBasket!, packs: basket}}  \r\n        }\r\n      case 'CLEAR_RETURN_BASKET':\r\n        return {...state, returnBasket: undefined}  \r\n      case 'SET_LOCATIONS':\r\n        return {...state, locations: action.payload}\r\n      case 'SET_COUNTRIES':\r\n        return {...state, countries: action.payload}\r\n      case 'SET_NOTIFICATIONS':\r\n        return {...state, notifications: action.payload}\r\n      case 'SET_ALARMS':\r\n        return {...state, alarms: action.payload}\r\n      case 'SET_RATINGS':\r\n        return {...state, ratings: action.payload}\r\n      case 'SET_INVITATIONS':\r\n        return {...state, invitations: action.payload}\r\n      case 'SET_STORES':\r\n        return {...state, stores: action.payload}\r\n      case 'SET_CATEGORIES':\r\n        return {...state, categories: action.payload}\r\n      case 'SET_USERS':\r\n        return {...state, users: action.payload}\r\n      case 'SET_PURCHASES':\r\n        return {...state, purchases: action.payload}\r\n      case 'SET_ORDERS':\r\n        return {...state, orders: action.payload}\r\n      case 'SET_STOCK_TRANS':\r\n        return {...state, stockTrans: action.payload}\r\n      case 'SET_PASSWORD_REQUESTS':\r\n        return {...state, passwordRequests: action.payload}\r\n      case 'SET_PRODUCTS':\r\n        return {...state, products: action.payload}\r\n      case 'SET_PACKS':\r\n        return {...state, packs: action.payload}\r\n      case 'SET_CUSTOMERS':\r\n        return {...state, customers: action.payload}\r\n      case 'SET_SPENDINGS':\r\n        return {...state, spendings: action.payload}\r\n      case 'SET_MONTHLY_TRANS':\r\n        return {...state, monthlyTrans: action.payload}\r\n      case 'SET_PACK_PRICES':\r\n        return {...state, packPrices: action.payload}\r\n      case 'SET_LOGS':\r\n        return {...state, logs: action.payload}\r\n      case 'ADD_ARCHIVED_ORDERS':\r\n        return {...state, archivedOrders: [...state.archivedOrders, ...action.payload]}\r\n      case 'SET_ADVERTS':\r\n        return {...state, adverts: action.payload}\r\n      case 'ADD_ARCHIVED_PURCHASES':\r\n        return {...state, archivedPurchases: [...state.archivedPurchases, ...action.payload]}\r\n      case 'ADD_ARCHIVED_STOCK_TRANS':\r\n        return {...state, archivedStockTrans: [...state.archivedStockTrans, ...action.payload]}\r\n      case 'SET_ARCHIVED_PRODUCTS':\r\n        return {...state, archivedProducts: action.payload}\r\n      case 'SET_ARCHIVED_PACKS':\r\n        return {...state, archivedPacks: action.payload}\r\n      case 'SET_STORE_PAYMENTS':\r\n        return {...state, storePayments: action.payload}\r\n      case 'LOGIN':\r\n        return {...state, user: action.payload}\r\n      case 'LOGOUT':\r\n        return {...state, user: undefined}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default Reducer","C:\\projects\\aedokkaneh\\src\\data\\store.tsx",["451"],"import { createContext, useReducer, useEffect, useState } from 'react'\r\nimport Reducer from './reducer'\r\nimport firebase from './firebase'\r\nimport { iAdvert, iAlarm, iCategory, iContext, iCustomerInfo, iFriend, iLog, iMonthlyTrans, iNotification, iOrder, iPack, iPackPrice, iPasswordRequest, iProduct, iPurchase, iRating, iSpending, iStockTrans, iStore, iStorePayment, iUserInfo } from './interfaces'\r\n\r\nexport const StoreContext = createContext({} as iContext)\r\n\r\nconst Store = (props: any) => {\r\n  const localData = localStorage.getItem('basket')\r\n  const basket = localData ? JSON.parse(localData) : ''\r\n  const initState = {\r\n    categories: [], \r\n    locations: [], \r\n    countries: [],\r\n    stores: [], \r\n    basket, \r\n    users: [],\r\n    purchases: [],\r\n    orders: [],\r\n    stockTrans: [],\r\n    products: [],\r\n    packs: [],\r\n    passwordRequests: [],\r\n    customers: [],\r\n    spendings: [],\r\n    monthlyTrans: [],\r\n    packPrices: [],\r\n    logs: [],\r\n    archivedOrders: [],\r\n    adverts: [],\r\n    archivedPurchases: [],\r\n    archivedStockTrans: [],\r\n    archivedProducts: [],\r\n    archivedPacks: [],\r\n    notifications: [],\r\n    alarms: [],\r\n    ratings: [],\r\n    invitations: [],\r\n    storePayments: []\r\n  }\r\n  const [state, dispatch] = useReducer(Reducer, initState)\r\n  useEffect(() => {\r\n    const unsubscribeCategories = firebase.firestore().collection('categories').onSnapshot(docs => {\r\n      let categories: iCategory[] = []\r\n      docs.forEach(doc => {\r\n        categories.push({\r\n          id: doc.id,\r\n          parentId: doc.data().parentId,\r\n          name: doc.data().name,\r\n          ordering: doc.data().ordering,\r\n          isLeaf: doc.data().isLeaf,\r\n          isActive: doc.data().isActive\r\n        })\r\n      })\r\n      dispatch({type: 'SET_CATEGORIES', payload: categories})\r\n    }, err => {\r\n      unsubscribeCategories()\r\n    })\r\n    const unsubscribePacks = firebase.firestore().collection('packs').where('isArchived', '==', false).onSnapshot(docs => {\r\n      let packs: iPack[] = []\r\n      let packPrices: iPackPrice[] = []\r\n      docs.forEach(doc => {\r\n        packs.push({\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n          productId: doc.data().productId,\r\n          productName: doc.data().productName,\r\n          productAlias: doc.data().productAlias,\r\n          productDescription: doc.data().productDescription,\r\n          categoryId: doc.data().categoryId,\r\n          trademark: doc.data().trademark,\r\n          country: doc.data().country,\r\n          sales: doc.data().sales,\r\n          rating: doc.data().rating,\r\n          ratingCount: doc.data().ratingCount,\r\n          price: doc.data().price,\r\n          imageUrl: doc.data().imageUrl,\r\n          subPackId: doc.data().subPackId,\r\n          specialImage: doc.data().specialImage,\r\n          bonusPackId: doc.data().bonusPackId,\r\n          isOffer: doc.data().isOffer,\r\n          offerEnd: doc.data().offerEnd?.toDate() || null,\r\n          closeExpired: doc.data().closeExpired,\r\n          forSale: doc.data().forSale,\r\n          subQuantity: doc.data().subQuantity,\r\n          subPercent: doc.data().subPercent,\r\n          bonusQuantity: doc.data().bonusQuantity,\r\n          bonusPercent: doc.data().bonusPercent,\r\n          unitsCount: doc.data().unitsCount,\r\n          byWeight: doc.data().byWeight,\r\n          isDivided: doc.data().isDivided\r\n        })\r\n        if (doc.data().prices) {\r\n          doc.data().prices.forEach((p: any) => {\r\n            packPrices.push({\r\n              packId: doc.id,\r\n              storeId: p.storeId,\r\n              quantity: p.quantity,\r\n              weight: p.weight,\r\n              price: p.price,\r\n              cost: p.cost,\r\n              isActive: p.isActive,\r\n              offerEnd: p.offerEnd?.toDate() || null,\r\n              time: p.time.toDate(),\r\n              isAuto: p.isAuto\r\n            })\r\n          })\r\n        }\r\n      })\r\n      dispatch({type: 'SET_PACKS', payload: packs})\r\n      dispatch({type: 'SET_PACK_PRICES', payload: packPrices})\r\n    }, err => {\r\n      unsubscribePacks()\r\n    })\r\n    const unsubscribePasswordRequests = firebase.firestore().collection('password-requests').onSnapshot(docs => {\r\n      let passwordRequests: iPasswordRequest[] = []\r\n      docs.forEach(doc => {\r\n        passwordRequests.push({\r\n          id: doc.id,\r\n          mobile: doc.data().mobile,\r\n          status: doc.data().status,\r\n          time: doc.data().time.toDate()\r\n        })\r\n      })\r\n      dispatch({type: 'SET_PASSWORD_REQUESTS', payload: passwordRequests})\r\n    }, err => {\r\n      unsubscribePasswordRequests()\r\n    })\r\n    const unsubscribeAdverts = firebase.firestore().collection('adverts').onSnapshot(docs => {\r\n      let adverts: iAdvert[] = []\r\n      docs.forEach(doc => {\r\n        adverts.push({\r\n          id: doc.id,\r\n          type: doc.data().type,\r\n          title: doc.data().title,\r\n          text: doc.data().text,\r\n          imageUrl: doc.data().imageUrl,\r\n          isActive: doc.data().isActive,\r\n          time: doc.data().time.toDate()\r\n        })\r\n      })\r\n      dispatch({type: 'SET_ADVERTS', payload: adverts})\r\n    }, err => {\r\n      unsubscribeAdverts()\r\n    }) \r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user){\r\n        dispatch({type: 'LOGIN', payload: user})\r\n        const unsubscribeLocations = firebase.firestore().collection('lookups').doc('l').onSnapshot(doc => {\r\n          if (doc.exists) dispatch({type: 'SET_LOCATIONS', payload: doc.data()?.values})\r\n        }, err => {\r\n          unsubscribeLocations()\r\n        })  \r\n        const unsubscribeCountries = firebase.firestore().collection('lookups').doc('c').onSnapshot(doc => {\r\n          if (doc.exists) dispatch({type: 'SET_COUNTRIES', payload: doc.data()?.values})\r\n        }, err => {\r\n          unsubscribeCountries()\r\n        })\r\n        const unsubscribeProducts = firebase.firestore().collection('products').where('isArchived', '==', false).onSnapshot(docs => {\r\n          let products: iProduct[] = []\r\n          docs.forEach(doc => {\r\n            products.push({\r\n              id: doc.id,\r\n              name: doc.data().name,\r\n              alias: doc.data().alias,\r\n              description: doc.data().description,\r\n              trademark: doc.data().trademark,\r\n              country: doc.data().country,\r\n              categoryId: doc.data().categoryId,\r\n              imageUrl: doc.data().imageUrl,\r\n              sales: doc.data().sales,\r\n              rating: doc.data().rating,\r\n              ratingCount: doc.data().ratingCount,\r\n              isArchived: doc.data().isArchived\r\n            })\r\n          })\r\n          dispatch({type: 'SET_PRODUCTS', payload: products})\r\n        }, err => {\r\n          unsubscribeProducts()\r\n        })    \r\n        const unsubscribeOrders = firebase.firestore().collection('orders').where('isArchived', '==', false).onSnapshot(docs => {\r\n          let orders: iOrder[] = []\r\n          docs.forEach(doc => {\r\n            orders.push({\r\n              id: doc.id,\r\n              userId: doc.data().userId,\r\n              status: doc.data().status,\r\n              basket: doc.data().basket,\r\n              time: doc.data().time.toDate()\r\n          })\r\n          })\r\n          dispatch({type: 'SET_ORDERS', payload: orders})\r\n        }, err => {\r\n          unsubscribeOrders()\r\n        })  \r\n        const unsubscribeUsers = firebase.firestore().collection('users').onSnapshot(docs => {\r\n          let users: iUserInfo[] = []\r\n          let notifications: iNotification[] = []\r\n          let alarms: iAlarm[] = []\r\n          let ratings: iRating[] = []\r\n          let invitations: iFriend[] = []\r\n          docs.forEach(doc => {\r\n            users.push({\r\n              id: doc.id,\r\n              name: doc.data().name,\r\n              mobile: doc.data().mobile,\r\n              storeName: doc.data().storeName,\r\n              colors: doc.data().colors,\r\n              locationId: doc.data().locationId,\r\n              time: doc.data().time.toDate()\r\n            })\r\n            if (doc.data().notifications) {\r\n              doc.data().notifications.forEach((n: any) => {\r\n                notifications.push({\r\n                  userId: doc.id,\r\n                  id: n.id,\r\n                  title: n.title,\r\n                  message: n.message,\r\n                  status: n.status,\r\n                  time: n.time.toDate()\r\n                })\r\n              })\r\n            }\r\n            if (doc.data().alarms) {\r\n              doc.data().alarms.forEach((a: any) => {\r\n                alarms.push({...a, userId: doc.id})\r\n              })\r\n            }\r\n            if (doc.data().ratings) {\r\n              doc.data().ratings.forEach((r: any) => {\r\n                ratings.push({...r, userId: doc.id})\r\n              })\r\n            }\r\n            if (doc.data().friends) {\r\n              doc.data().friends.forEach((f: any) => {\r\n                invitations.push({...f, userId: doc.id})\r\n              })\r\n            }\r\n          })\r\n          dispatch({type: 'SET_USERS', payload: users})\r\n          dispatch({type: 'SET_NOTIFICATIONS', payload: notifications})\r\n          dispatch({type: 'SET_ALARMS', payload: alarms})\r\n          dispatch({type: 'SET_RATINGS', payload: ratings})\r\n          dispatch({type: 'SET_INVITATIONS', payload: invitations})\r\n        }, err => {\r\n          unsubscribeUsers()\r\n        })  \r\n        const unsubscribeCustomers = firebase.firestore().collection('customers').onSnapshot(docs => {\r\n          let customers: iCustomerInfo[] = []\r\n          docs.forEach(doc => {\r\n            customers.push({\r\n              id: doc.id,\r\n              name: doc.data().name,\r\n              storeId: doc.data().storeId,\r\n              storeName: doc.data().storeName,\r\n              orderLimit: doc.data().orderLimit,\r\n              isBlocked: doc.data().isBlocked,\r\n              address: doc.data().address,\r\n              deliveryFees: doc.data().deliveryFees,\r\n              specialDiscount: doc.data().specialDiscount,\r\n              discounts: doc.data().discounts,\r\n              mapPosition: doc.data().mapPosition,\r\n              ordersCount: doc.data().ordersCount,\r\n              deliveredOrdersCount: doc.data().deliveredOrdersCount,\r\n              returnedCount: doc.data().returnedCount,\r\n              deliveredOrdersTotal: doc.data().deliveredOrdersTotal,\r\n              time: doc.data().time.toDate()\r\n            })\r\n          })\r\n          dispatch({type: 'SET_CUSTOMERS', payload: customers})\r\n        }, err => {\r\n          unsubscribeCustomers()\r\n        })  \r\n        const unsubscribeStores = firebase.firestore().collection('stores').onSnapshot(docs => {\r\n          let stores: iStore[] = []\r\n          let storePayments: iStorePayment[] = []\r\n          docs.forEach(doc => {\r\n            stores.push({\r\n              id: doc.id,\r\n              name: doc.data().name,\r\n              type: doc.data().type,\r\n              discount: doc.data().discount,\r\n              isActive: doc.data().isActive,\r\n              allowReturn: doc.data().allowReturn,\r\n              mobile: doc.data().mobile,\r\n              mapPosition: doc.data().mapPosition,\r\n              openTime: doc.data().openTime,\r\n              address: doc.data().address,\r\n              time: doc.data().time.toDate(),\r\n              balances: doc.data().balances\r\n            })\r\n            if (doc.data().payments) {\r\n              doc.data().payments.forEach((p: any) => {\r\n                storePayments.push({...p, storeId: doc.id, storeInfo: doc.data()})\r\n              })\r\n            }\r\n          })\r\n          dispatch({type: 'SET_STORES', payload: stores})\r\n          dispatch({type: 'SET_STORE_PAYMENTS', payload: storePayments})\r\n        }, err => {\r\n          unsubscribeStores()\r\n        })  \r\n        const unsubscribePurchases = firebase.firestore().collection('purchases').where('isArchived', '==', false).onSnapshot(docs => {\r\n          let purchases: iPurchase[] = []\r\n          docs.forEach(doc => {\r\n            purchases.push({\r\n              id: doc.id,\r\n              storeId: doc.data().storeId,\r\n              total: doc.data().total,\r\n              time: doc.data().time.toDate(),\r\n              isArchived: doc.data().isArchived,\r\n              basket: doc.data().basket\r\n            })\r\n          })\r\n          dispatch({type: 'SET_PURCHASES', payload: purchases})\r\n        }, err => {\r\n          unsubscribePurchases()\r\n        })  \r\n        const unsubscribeStockTrans = firebase.firestore().collection('stock-trans').where('isArchived', '==', false).onSnapshot(docs => {\r\n          let stockTrans: iStockTrans[] = []\r\n          docs.forEach(doc => {\r\n            stockTrans.push({\r\n              id: doc.id,\r\n              purchaseId: doc.data().purchaseId,\r\n              basket: doc.data().basket\r\n            })\r\n          })\r\n          dispatch({type: 'SET_STOCK_TRANS', payload: stockTrans})\r\n        }, err => {\r\n          unsubscribeStockTrans()\r\n        })  \r\n        const unsubscribeSpendings = firebase.firestore().collection('spendings').onSnapshot(docs => {\r\n          let spendings: iSpending[] = []\r\n          docs.forEach(doc => {\r\n            spendings.push({\r\n              id: doc.id,\r\n              type: doc.data().type,\r\n              amount: doc.data().amount,\r\n              spendingDate: doc.data().spendingDate.toDate(),\r\n              description: doc.data().description,\r\n              time: doc.data().time.toDate()\r\n            })\r\n          })\r\n          dispatch({type: 'SET_SPENDINGS', payload: spendings})\r\n        }, err => {\r\n          unsubscribeSpendings()\r\n        })  \r\n        const unsubscribeMonthlyTrans = firebase.firestore().collection('monthly-trans').onSnapshot(docs => {\r\n          let monthlyTrans: iMonthlyTrans[] = []\r\n          docs.forEach(doc => {\r\n            monthlyTrans.push({...doc.data(), id:doc.id})\r\n          })\r\n          dispatch({type: 'SET_MONTHLY_TRANS', payload: monthlyTrans})\r\n        }, err => {\r\n          unsubscribeMonthlyTrans()\r\n        })  \r\n        const unsubscribeLogs = firebase.firestore().collection('logs').onSnapshot(docs => {\r\n          let logs: iLog[] = []\r\n          docs.forEach(doc => {\r\n            logs.push({\r\n              id: doc.id,\r\n              userId: doc.data().userId,\r\n              page: doc.data().page,\r\n              error: doc.data().error,\r\n              time: doc.data().time.toDate()\r\n            })\r\n          })\r\n          dispatch({type: 'SET_LOGS', payload: logs})\r\n        }, err => {\r\n          unsubscribeLogs()\r\n        })  \r\n      } else {\r\n        dispatch({type: 'LOGOUT'})\r\n      }\r\n    })\r\n  }, [])\r\n  return (\r\n    <StoreContext.Provider value={{state, dispatch}}>\r\n      {props.children}\r\n    </StoreContext.Provider>\r\n  )\r\n}\r\n \r\nexport default Store\r\n\r\n","C:\\projects\\aedokkaneh\\src\\pages\\countries.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-country.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-country.tsx",[],"C:\\projects\\aedokkaneh\\src\\data\\actionst.ts",["452"],"C:\\projects\\aedokkaneh\\src\\pages\\add-location.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-location.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\locations.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\logs.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-advert.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\adverts.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-advert.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\advert-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-category.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\categories.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-category.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\permission-list.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\register.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\permit-user.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\retreive-password.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\new-users.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\password-requests.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\login.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\approve-user.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\customer-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\customers.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-customer.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\store-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-store.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-store.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\stores.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-bulk.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-bulk.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\product-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-offer.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-offer.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-pack-store.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\store-owners.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\pack-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-pack.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-pack.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-price.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-product.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-product.tsx",["453"],"import { useState, useContext, useEffect, ChangeEvent } from 'react'\r\nimport { f7, Page, Navbar, List, ListItem, ListInput, Fab, Icon } from 'framework7-react'\r\nimport { StoreContext } from '../data/store'\r\nimport { editProduct, showMessage, showError, getMessage } from '../data/actionst'\r\nimport labels from '../data/labels'\r\n\r\ninterface Props {\r\n  id: string\r\n}\r\nconst EditProduct = (props: Props) => {\r\n  const { state } = useContext(StoreContext)\r\n  const [error, setError] = useState('')\r\n  const [product] = useState(() => state.products.find(p => p.id === props.id)!)\r\n  const [name, setName] = useState(product.name)\r\n  const [alias, setAlias] = useState(product.alias)\r\n  const [description, setDescription] = useState(product.description)\r\n  const [categoryId, setCategoryId] = useState(product.categoryId)\r\n  const [trademark, setTrademark] = useState(product.trademark)\r\n  const [country, setCountry] = useState(product.country)\r\n  const [imageUrl, setImageUrl] = useState(product.imageUrl)\r\n  const [image, setImage] = useState<File>()\r\n  const [fileErrorMessage, setFileErrorMessage] = useState('')\r\n  const [hasChanged, setHasChanged] = useState(false)\r\n  const [categories] = useState(() => [...state.categories].sort((c1, c2) => c1.name > c2.name ? 1 : -1))\r\n  const [countries] = useState(() => [...state.countries].sort((c1, c2) => c1 > c2 ? 1 : -1))\r\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files\r\n    if (!files) return\r\n    const filename = files[0].name\r\n    if (filename.lastIndexOf('.') <= 0) {\r\n      setError(labels.invalidFile)\r\n      return\r\n    }\r\n    const fileReader = new FileReader()\r\n    fileReader.addEventListener('load', () => {\r\n      if (fileReader.result) setImageUrl(fileReader.result.toString())\r\n    })\r\n    fileReader.readAsDataURL(files[0])\r\n    setImage(files[0])\r\n  }\r\n  useEffect(() => {\r\n    if (name !== product.name\r\n    || alias !== product.alias\r\n    || description !== product.description\r\n    || country !== product.country\r\n    || categoryId !== product.categoryId\r\n    || trademark !== product.trademark\r\n    || imageUrl !== product.imageUrl) setHasChanged(true)\r\n    else setHasChanged(false)\r\n  }, [product, name, alias, description, country, categoryId, trademark, imageUrl])\r\n  useEffect(() => {\r\n    if (error) {\r\n      showError(error)\r\n      setError('')\r\n    }\r\n  }, [error])\r\n  const handleSubmit = () => {\r\n    try{\r\n      if (state.products.find(p => p.id !== product.id && p.categoryId === categoryId && p.country === country && p.name === name && p.alias === alias)) {\r\n        throw new Error('duplicateProduct')\r\n      }\r\n      const newProduct = {\r\n        ...product,\r\n        categoryId,\r\n        name,\r\n        alias,\r\n        description,\r\n        trademark,\r\n        country,\r\n      }\r\n      editProduct(newProduct, product.name, state.packs, image)\r\n      showMessage(labels.editSuccess)\r\n      f7.views.current.router.back()\r\n    } catch(err) {\r\n\t\t\tsetError(getMessage(f7.views.current.router.currentRoute.path, err))\r\n\t\t}\r\n  }\r\n  return (\r\n    <Page>\r\n      <Navbar title={labels.editProduct} backLink={labels.back} />\r\n      <List form inlineLabels>\r\n        <ListInput \r\n          name=\"name\" \r\n          label={labels.name}\r\n          clearButton\r\n          type=\"text\" \r\n          value={name} \r\n          onChange={e => setName(e.target.value)}\r\n          onInputClear={() => setName('')}\r\n        />\r\n        <ListInput \r\n          name=\"alias\" \r\n          label={labels.alias}\r\n          clearButton\r\n          type=\"text\" \r\n          value={alias} \r\n          onChange={e => setAlias(e.target.value)}\r\n          onInputClear={() => setAlias('')}\r\n        />\r\n        <ListInput \r\n          name=\"description\" \r\n          label={labels.description}\r\n          clearButton\r\n          type=\"text\" \r\n          value={description} \r\n          onChange={e => setDescription(e.target.value)}\r\n          onInputClear={() => setDescription('')}\r\n        />\r\n        <ListInput \r\n          name=\"trademark\" \r\n          label={labels.trademark}\r\n          clearButton\r\n          type=\"text\" \r\n          value={trademark} \r\n          onChange={e => setTrademark(e.target.value)}\r\n          onInputClear={() => setTrademark('')}\r\n        />\r\n        <ListItem\r\n          title={labels.category}\r\n          smartSelect\r\n          smartSelectParams={{\r\n            openIn: \"popup\", \r\n            closeOnSelect: true, \r\n            searchbar: true, \r\n            searchbarPlaceholder: labels.search,\r\n            popupCloseLinkText: labels.close\r\n          }}\r\n        >\r\n          <select name=\"categoryId\" value={categoryId} onChange={e => setCategoryId(e.target.value)}>\r\n            <option value=\"\"></option>\r\n            {categories.map(c => \r\n              <option key={c.id} value={c.id}>{c.name}</option>\r\n            )}\r\n          </select>\r\n        </ListItem>\r\n        <ListItem\r\n          title={labels.country}\r\n          smartSelect\r\n          smartSelectParams={{\r\n            openIn: \"popup\", \r\n            closeOnSelect: true, \r\n            searchbar: true, \r\n            searchbarPlaceholder: labels.search,\r\n            popupCloseLinkText: labels.close\r\n          }}\r\n        >\r\n          <select name=\"country\" value={country} onChange={e => setCountry(e.target.value)}>\r\n            <option value=\"\"></option>\r\n            {countries.map(c => \r\n              <option key={c} value={c}>{c}</option>\r\n            )}\r\n          </select>\r\n        </ListItem>\r\n        <ListInput \r\n          name=\"image\" \r\n          label=\"Image\" \r\n          type=\"file\" \r\n          accept=\"image/*\" \r\n          errorMessage={fileErrorMessage}\r\n          errorMessageForce\r\n          onChange={e => handleFileChange(e)}\r\n        />\r\n        <img src={imageUrl} className=\"img-card\" alt={labels.noImage} />\r\n      </List>\r\n      {!name || !categoryId || !country || !hasChanged ? '' :\r\n        <Fab position=\"left-top\" slot=\"fixed\" color=\"green\" className=\"top-fab\" onClick={() => handleSubmit()}>\r\n          <Icon material=\"done\"></Icon>\r\n        </Fab>\r\n      }\r\n    </Page>\r\n  )\r\n}\r\nexport default EditProduct\r\n","C:\\projects\\aedokkaneh\\src\\pages\\add-store-pack.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\product-packs.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\products.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\change-password.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\notifications.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-notification.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\settings.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\home.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\not-found-page.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\rating-stars.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\spendings.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-spending.tsx",["454"],"import { useState, useEffect } from 'react'\r\nimport { f7, Page, Navbar, List, ListItem, ListInput, Fab, Icon } from 'framework7-react'\r\nimport labels from '../data/labels'\r\nimport { spendingTypes } from '../data/config'\r\nimport { addSpending, showMessage, showError, getMessage } from '../data/actionst'\r\n\r\nconst AddSpending = () => {\r\n  const [error, setError] = useState('')\r\n  const [type, setType] = useState('')\r\n  const [amount, setAmount] = useState('')\r\n  const [spendingDate, setSpendingDate] = useState([new Date()])\r\n  const [spendingDateErrorMessage, setSpendingDateErrorMessage] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  // useEffect(() => {\r\n  //   const validateDate = value => {\r\n  //     if (new Date(value) > new Date()){\r\n  //       setSpendingDateErrorMessage(labels.invalidSpendingDate)\r\n  //     } else {\r\n  //       setSpendingDateErrorMessage('')\r\n  //     }\r\n  //   }\r\n  //   if (spendingDate.length > 0) validateDate(spendingDate)\r\n  //   else setSpendingDateErrorMessage('')\r\n  // }, [spendingDate])\r\n  useEffect(() => {\r\n    if (error) {\r\n      showError(error)\r\n      setError('')\r\n    }\r\n  }, [error])\r\n  const handleSubmit = () => {\r\n    try{\r\n      if (Number(amount) <= 0 || Number(amount) !== Number(Number(amount).toFixed(2))) {\r\n        throw new Error('invalidValue')\r\n      }\r\n      // const formatedDate = spendingDate.length > 0 ? new Date(spendingDate) : ''\r\n      const formatedDate = new Date()\r\n      addSpending({\r\n        type,\r\n        amount: +amount * 100,\r\n        spendingDate: formatedDate,\r\n        description,\r\n        time: new Date()\r\n      })\r\n      showMessage(labels.addSuccess)\r\n      f7.views.current.router.back()\r\n    } catch(err) {\r\n\t\t\tsetError(getMessage(f7.views.current.router.currentRoute.path, err))\r\n\t\t}\r\n  }\r\n  return (\r\n    <Page>\r\n      <Navbar title={labels.newSpending} backLink={labels.back} />\r\n      <List form inlineLabels>\r\n        <ListInput \r\n          name=\"amount\" \r\n          label={labels.amount}\r\n          value={amount}\r\n          clearButton \r\n          type=\"number\" \r\n          onChange={e => setAmount(e.target.value)}\r\n          onInputClear={() => setAmount('')}\r\n        />\r\n        <ListItem\r\n          title={labels.type}\r\n          smartSelect\r\n          smartSelectParams={{\r\n            openIn: \"popup\", \r\n            closeOnSelect: true, \r\n            searchbar: true, \r\n            searchbarPlaceholder: labels.search,\r\n            popupCloseLinkText: labels.close\r\n          }}\r\n        >\r\n          <select name=\"type\" value={type} onChange={e => setType(e.target.value)}>\r\n            <option value=\"\"></option>\r\n            {spendingTypes.map(t => \r\n              <option key={t.id} value={t.id}>{t.name}</option>\r\n            )}\r\n          </select>\r\n        </ListItem>\r\n        <ListInput \r\n          name=\"description\" \r\n          label={labels.description}\r\n          value={description}\r\n          clearButton \r\n          type=\"text\" \r\n          onChange={e => setDescription(e.target.value)}\r\n          onInputClear={() => setDescription('')}\r\n        />\r\n        <ListInput\r\n          name=\"spendingDate\"\r\n          label={labels.spendingDate}\r\n          type=\"datepicker\"\r\n          value={spendingDate} \r\n          clearButton\r\n          errorMessage={spendingDateErrorMessage}\r\n          errorMessageForce\r\n          onCalendarChange={value => setSpendingDate(value)}\r\n          onInputClear={() => setSpendingDate([])}\r\n        />\r\n      </List>\r\n      {!amount || !type || !spendingDate || spendingDateErrorMessage ? '' :\r\n        <Fab position=\"left-top\" slot=\"fixed\" color=\"green\" className=\"top-fab\" onClick={() => handleSubmit()}>\r\n          <Icon material=\"done\"></Icon>\r\n        </Fab>\r\n      }\r\n    </Page>\r\n  )\r\n}\r\nexport default AddSpending\r\n","C:\\projects\\aedokkaneh\\src\\pages\\edit-spending.tsx",["455"],"import { useState, useContext, useEffect } from 'react'\r\nimport { editSpending, showMessage, showError, getMessage } from '../data/actionst'\r\nimport { f7, Page, Navbar, List, ListInput, Fab, Icon, Toolbar, ListItem } from 'framework7-react'\r\nimport { StoreContext } from '../data/store'\r\nimport BottomToolbar from './bottom-toolbar'\r\nimport labels from '../data/labels'\r\nimport { spendingTypes } from '../data/config'\r\n\r\ninterface Props {\r\n  id: string\r\n}\r\nconst EditSpending = (props: Props) => {\r\n  const { state } = useContext(StoreContext)\r\n  const [error, setError] = useState('')\r\n  const [spending] = useState(() => state.spendings.find(s => s.id === props.id)!)\r\n  const [type, setType] = useState(spending.type)\r\n  const [amount, setAmount] = useState((spending.amount / 100).toFixed(2))\r\n  const [spendingDate, setSpendingDate] = useState(() => spending.spendingDate ? [spending.spendingDate] : '')\r\n  const [spendingDateErrorMessage, setSpendingDateErrorMessage] = useState('')\r\n  const [description, setDescription] = useState(spending.description)\r\n  const [hasChanged, setHasChanged] = useState(false)\r\n  // useEffect(() => {\r\n  //   const validateDate = value => {\r\n  //     if (new Date(value) > new Date()){\r\n  //       setSpendingDateErrorMessage(labels.invalidSpendingDate)\r\n  //     } else {\r\n  //       setSpendingDateErrorMessage('')\r\n  //     }\r\n  //   }\r\n  //   if (spendingDate.length > 0) validateDate(spendingDate)\r\n  //   else setSpendingDateErrorMessage('')\r\n  // }, [spendingDate])\r\n  useEffect(() => {\r\n    if (error) {\r\n      showError(error)\r\n      setError('')\r\n    }\r\n  }, [error])\r\n  const handleEdit = () => {\r\n    try{\r\n      if (Number(amount) <= 0 || Number(amount) !== Number(Number(amount).toFixed(2))) {\r\n        throw new Error('invalidValue')\r\n      }\r\n      // const formatedDate = spendingDate.length > 0 ? new Date(spendingDate) : ''\r\n      const formatedDate = new Date()\r\n      const newSpending = {\r\n        ...spending,\r\n        type,\r\n        amount: +amount * 100,\r\n        spendingDate: formatedDate,\r\n        description\r\n      }\r\n      editSpending(newSpending)\r\n      showMessage(labels.editSuccess)\r\n      f7.views.current.router.back()\r\n    } catch(err) {\r\n\t\t\tsetError(getMessage(f7.views.current.router.currentRoute.path, err))\r\n\t\t}    \r\n  }\r\n  useEffect(() => {\r\n    if (+amount * 100 !== spending.amount\r\n    || type !== spending.type\r\n    || description !== spending.description\r\n    || (!spending.spendingDate && spendingDate.length > 0)\r\n    || (spending.spendingDate && spendingDate.length === 0)\r\n    // || (spending.spendingDate.toDate()).toString() !== (new Date(spendingDate)).toString()\r\n    ) setHasChanged(true)\r\n    else setHasChanged(false)\r\n  }, [spending, amount, spendingDate, type, description])\r\n\r\n  return (\r\n    <Page>\r\n      <Navbar title={labels.editSpending} backLink={labels.back} />\r\n      <List form inlineLabels>\r\n      <ListInput \r\n          name=\"amount\" \r\n          label={labels.amount}\r\n          value={amount}\r\n          clearButton \r\n          type=\"number\" \r\n          onChange={e => setAmount(e.target.value)}\r\n          onInputClear={() => setAmount('')}\r\n        />\r\n        <ListItem\r\n          title={labels.type}\r\n          smartSelect\r\n          smartSelectParams={{\r\n            openIn: \"popup\", \r\n            closeOnSelect: true, \r\n            searchbar: true, \r\n            searchbarPlaceholder: labels.search,\r\n            popupCloseLinkText: labels.close\r\n          }}\r\n        >\r\n          <select name=\"type\" value={type} onChange={e => setType(e.target.value)}>\r\n            <option value=\"\"></option>\r\n            {spendingTypes.map(t => \r\n              <option key={t.id} value={t.id}>{t.name}</option>\r\n            )}\r\n          </select>\r\n        </ListItem>\r\n        <ListInput \r\n          name=\"description\" \r\n          label={labels.description}\r\n          value={description}\r\n          clearButton \r\n          type=\"text\" \r\n          onChange={e => setDescription(e.target.value)}\r\n          onInputClear={() => setDescription('')}\r\n        />\r\n        <ListInput\r\n          name=\"spendingDate\"\r\n          label={labels.spendingDate}\r\n          type=\"datepicker\"\r\n          value={spendingDate} \r\n          clearButton\r\n          errorMessage={spendingDateErrorMessage}\r\n          errorMessageForce\r\n          onCalendarChange={value => setSpendingDate(value)}\r\n          onInputClear={() => setSpendingDate([])}\r\n        />\r\n      </List>\r\n      {!amount || !type || !spendingDate || spendingDateErrorMessage || !hasChanged ? '' :\r\n        <Fab position=\"left-top\" slot=\"fixed\" color=\"green\" className=\"top-fab\" onClick={() => handleEdit()}>\r\n          <Icon material=\"done\"></Icon>\r\n        </Fab>\r\n      }\r\n      <Toolbar bottom>\r\n        <BottomToolbar/>\r\n      </Toolbar>\r\n\r\n    </Page>\r\n  )\r\n}\r\nexport default EditSpending\r\n","C:\\projects\\aedokkaneh\\src\\pages\\bottom-toolbar.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\invitation-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\invitations.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\basket.tsx",["456"],"import { useContext, useEffect, useState } from 'react'\r\nimport { f7, Block, Fab, Page, Navbar, List, ListItem, Toolbar, Link, Icon, Stepper, Badge } from 'framework7-react'\r\nimport { StoreContext } from '../data/store'\r\nimport { quantityText } from '../data/actionst'\r\nimport labels from '../data/labels'\r\nimport { iBasketPack } from '../data/interfaces'\r\n\r\nconst Basket = () => {\r\n  const { state, dispatch } = useContext(StoreContext)\r\n  const [store] = useState(() => state.stores.find(s => s.id === state.basket?.storeId))\r\n  const [basket, setBasket] = useState<iBasketPack[]>([])\r\n  const [totalPrice, setTotalPrice] = useState(0)\r\n  useEffect(() => {\r\n    if (!state.basket?.packs) f7.views.current.router.navigate('/home/', {reloadAll: true})\r\n  }, [state.basket, f7.views.current.router])\r\n  useEffect(() => {\r\n    setBasket(() => state.basket?.packs || [])\r\n    setTotalPrice(() => state.basket?.packs?.reduce((sum, p) => sum + Math.round(p.cost * (p.weight || p.quantity)), 0) || 0)\r\n  }, [state.basket])\r\n  const handleAdd = (pack: iBasketPack) => {\r\n    if (store?.id === 's') {\r\n      const stock = state.packPrices.find(p => p.packId === pack.packId && p.storeId === 's')\r\n      if (pack.quantity === pack.requested) return\r\n      if (pack.quantity === stock?.quantity) return\r\n    }\r\n    if (pack.isDivided) return\r\n    if (pack.orderId && pack.quantity === pack.requested) return\r\n    dispatch({type: 'INCREASE_QUANTITY', payload: pack})\r\n  }\r\n  let i = 0  \r\n  return (\r\n    <Page>\r\n      <Navbar title={`${labels.basketFrom} ${store?.name}`} backLink={labels.back} />\r\n      <Block>\r\n        <List mediaList>\r\n          {basket.map(p => \r\n            <ListItem\r\n              title={p.productName}\r\n              subtitle={p.productAlias}\r\n              text={p.packName}\r\n              footer={`${labels.grossPrice}: ${(Math.round(p.cost * (p.weight || p.quantity)) / 100).toFixed(2)}`}\r\n              key={i++}\r\n            >\r\n              <img src={p.imageUrl} slot=\"media\" className=\"img-list\" alt={labels.noImage} />\r\n              <div className=\"list-subtext1\">{`${labels.unitPrice}: ${(p.cost / 100).toFixed(2)}`}</div>\r\n              <div className=\"list-subtext2\">{`${labels.quantity}: ${quantityText(p.quantity, p.weight)}`}</div>\r\n              {p.closeExpired ? <Badge slot=\"text\" color=\"red\">{labels.closeExpired}</Badge> : ''}\r\n              <Stepper\r\n                slot=\"after\"\r\n                fill\r\n                buttonsOnly\r\n                onStepperPlusClick={() => handleAdd(p)}\r\n                onStepperMinusClick={() => dispatch({type: 'DECREASE_QUANTITY', payload: p})}\r\n              />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n      </Block>\r\n      <Fab position=\"center-bottom\" slot=\"fixed\" text={`${labels.submit} ${(totalPrice / 100).toFixed(2)}`} color=\"green\" href=\"/confirm-purchase/\">\r\n        <Icon material=\"done\"></Icon>\r\n      </Fab>\r\n\r\n      <Toolbar bottom>\r\n        <Link href='/home/' iconMaterial=\"home\" />\r\n        <Link href='#' iconMaterial=\"delete\" onClick={() => dispatch({type: 'CLEAR_BASKET'})} />\r\n      </Toolbar>\r\n    </Page>\r\n  )\r\n}\r\nexport default Basket\r\n","C:\\projects\\aedokkaneh\\src\\pages\\confirm-purchase.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\purchase-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\purchases.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\store-packs.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\return-basket.tsx",[],{"ruleId":"457","replacedBy":"458"},{"ruleId":"459","replacedBy":"460"},{"ruleId":"457","replacedBy":"458"},{"ruleId":"459","replacedBy":"460"},{"ruleId":"461","severity":1,"message":"462","line":4,"column":47,"nodeType":"463","messageId":"464","endLine":4,"endColumn":48},{"ruleId":"461","severity":1,"message":"465","line":5,"column":11,"nodeType":"463","messageId":"464","endLine":5,"endColumn":20},{"ruleId":"466","severity":1,"message":"467","line":79,"column":7,"nodeType":"468","messageId":"469","endLine":80,"endColumn":50},{"ruleId":"466","severity":1,"message":"467","line":101,"column":7,"nodeType":"468","messageId":"469","endLine":101,"endColumn":38},{"ruleId":"466","severity":1,"message":"467","line":131,"column":7,"nodeType":"468","messageId":"469","endLine":152,"endColumn":10},{"ruleId":"461","severity":1,"message":"470","line":1,"column":48,"nodeType":"463","messageId":"464","endLine":1,"endColumn":56},{"ruleId":"461","severity":1,"message":"471","line":4,"column":19,"nodeType":"463","messageId":"464","endLine":4,"endColumn":26},{"ruleId":"461","severity":1,"message":"472","line":22,"column":28,"nodeType":"463","messageId":"464","endLine":22,"endColumn":47},{"ruleId":"461","severity":1,"message":"473","line":12,"column":36,"nodeType":"463","messageId":"464","endLine":12,"endColumn":63},{"ruleId":"461","severity":1,"message":"473","line":19,"column":36,"nodeType":"463","messageId":"464","endLine":19,"endColumn":63},{"ruleId":"474","severity":1,"message":"475","line":15,"column":6,"nodeType":"476","endLine":15,"endColumn":45,"suggestions":"477"},"no-native-reassign",["478"],"no-negated-in-lhs",["479"],"@typescript-eslint/no-unused-vars","'i' is defined but never used.","Identifier","unusedVar","'increment' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'useState' is defined but never used.","'iBasket' is defined but never used.","'setFileErrorMessage' is assigned a value but never used.","'setSpendingDateErrorMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'f7.views.current.router'. Either exclude it or remove the dependency array. Outer scope values like 'f7.views.current.router' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["480"],"no-global-assign","no-unsafe-negation",{"desc":"481","fix":"482"},"Update the dependencies array to be: [state.basket]",{"range":"483","text":"484"},[758,797],"[state.basket]"]