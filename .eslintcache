[{"C:\\projects\\aedokkaneh\\src\\service-worker.js":"1","C:\\projects\\aedokkaneh\\src\\index.tsx":"2","C:\\projects\\aedokkaneh\\src\\app.tsx":"3","C:\\projects\\aedokkaneh\\src\\routes.ts":"4","C:\\projects\\aedokkaneh\\src\\data\\config.ts":"5","C:\\projects\\aedokkaneh\\src\\data\\labels.ts":"6","C:\\projects\\aedokkaneh\\src\\data\\firebase.ts":"7","C:\\projects\\aedokkaneh\\src\\data\\reducer.ts":"8","C:\\projects\\aedokkaneh\\src\\data\\store.tsx":"9","C:\\projects\\aedokkaneh\\src\\pages\\countries.tsx":"10","C:\\projects\\aedokkaneh\\src\\pages\\edit-country.tsx":"11","C:\\projects\\aedokkaneh\\src\\pages\\add-country.tsx":"12","C:\\projects\\aedokkaneh\\src\\data\\actionst.ts":"13","C:\\projects\\aedokkaneh\\src\\pages\\add-location.tsx":"14","C:\\projects\\aedokkaneh\\src\\pages\\edit-location.tsx":"15","C:\\projects\\aedokkaneh\\src\\pages\\locations.tsx":"16","C:\\projects\\aedokkaneh\\src\\pages\\logs.tsx":"17","C:\\projects\\aedokkaneh\\src\\pages\\edit-advert.tsx":"18","C:\\projects\\aedokkaneh\\src\\pages\\adverts.tsx":"19","C:\\projects\\aedokkaneh\\src\\pages\\add-advert.tsx":"20","C:\\projects\\aedokkaneh\\src\\pages\\advert-details.tsx":"21","C:\\projects\\aedokkaneh\\src\\pages\\edit-category.tsx":"22","C:\\projects\\aedokkaneh\\src\\pages\\categories.tsx":"23","C:\\projects\\aedokkaneh\\src\\pages\\add-category.tsx":"24","C:\\projects\\aedokkaneh\\src\\pages\\permission-list.tsx":"25","C:\\projects\\aedokkaneh\\src\\pages\\register.tsx":"26","C:\\projects\\aedokkaneh\\src\\pages\\permit-user.tsx":"27","C:\\projects\\aedokkaneh\\src\\pages\\retreive-password.tsx":"28","C:\\projects\\aedokkaneh\\src\\pages\\new-users.tsx":"29","C:\\projects\\aedokkaneh\\src\\pages\\password-requests.tsx":"30","C:\\projects\\aedokkaneh\\src\\pages\\login.tsx":"31","C:\\projects\\aedokkaneh\\src\\pages\\approve-user.tsx":"32","C:\\projects\\aedokkaneh\\src\\pages\\customer-details.tsx":"33","C:\\projects\\aedokkaneh\\src\\pages\\customers.tsx":"34","C:\\projects\\aedokkaneh\\src\\pages\\edit-customer.tsx":"35","C:\\projects\\aedokkaneh\\src\\pages\\store-details.tsx":"36","C:\\projects\\aedokkaneh\\src\\pages\\edit-store.tsx":"37","C:\\projects\\aedokkaneh\\src\\pages\\add-store.tsx":"38","C:\\projects\\aedokkaneh\\src\\pages\\stores.tsx":"39","C:\\projects\\aedokkaneh\\src\\pages\\edit-bulk.tsx":"40","C:\\projects\\aedokkaneh\\src\\pages\\add-bulk.tsx":"41","C:\\projects\\aedokkaneh\\src\\pages\\product-details.tsx":"42","C:\\projects\\aedokkaneh\\src\\pages\\edit-offer.tsx":"43","C:\\projects\\aedokkaneh\\src\\pages\\add-offer.tsx":"44","C:\\projects\\aedokkaneh\\src\\pages\\add-pack-store.tsx":"45","C:\\projects\\aedokkaneh\\src\\pages\\store-owners.tsx":"46","C:\\projects\\aedokkaneh\\src\\pages\\pack-details.tsx":"47","C:\\projects\\aedokkaneh\\src\\pages\\edit-pack.tsx":"48","C:\\projects\\aedokkaneh\\src\\pages\\add-pack.tsx":"49","C:\\projects\\aedokkaneh\\src\\pages\\edit-price.tsx":"50","C:\\projects\\aedokkaneh\\src\\pages\\add-product.tsx":"51","C:\\projects\\aedokkaneh\\src\\pages\\edit-product.tsx":"52","C:\\projects\\aedokkaneh\\src\\pages\\add-store-pack.tsx":"53","C:\\projects\\aedokkaneh\\src\\pages\\product-packs.tsx":"54","C:\\projects\\aedokkaneh\\src\\pages\\products.tsx":"55","C:\\projects\\aedokkaneh\\src\\pages\\change-password.tsx":"56","C:\\projects\\aedokkaneh\\src\\pages\\notifications.tsx":"57","C:\\projects\\aedokkaneh\\src\\pages\\add-notification.tsx":"58","C:\\projects\\aedokkaneh\\src\\pages\\settings.tsx":"59","C:\\projects\\aedokkaneh\\src\\pages\\home.tsx":"60","C:\\projects\\aedokkaneh\\src\\pages\\not-found-page.tsx":"61","C:\\projects\\aedokkaneh\\src\\pages\\rating-stars.tsx":"62","C:\\projects\\aedokkaneh\\src\\pages\\spendings.tsx":"63","C:\\projects\\aedokkaneh\\src\\pages\\add-spending.tsx":"64","C:\\projects\\aedokkaneh\\src\\pages\\edit-spending.tsx":"65","C:\\projects\\aedokkaneh\\src\\pages\\bottom-toolbar.tsx":"66","C:\\projects\\aedokkaneh\\src\\pages\\invitation-details.tsx":"67","C:\\projects\\aedokkaneh\\src\\pages\\invitations.tsx":"68","C:\\projects\\aedokkaneh\\src\\pages\\basket.tsx":"69","C:\\projects\\aedokkaneh\\src\\pages\\confirm-purchase.tsx":"70","C:\\projects\\aedokkaneh\\src\\pages\\purchase-details.tsx":"71","C:\\projects\\aedokkaneh\\src\\pages\\purchases.tsx":"72","C:\\projects\\aedokkaneh\\src\\pages\\store-packs.tsx":"73","C:\\projects\\aedokkaneh\\src\\pages\\return-basket.tsx":"74","C:\\projects\\aedokkaneh\\src\\pages\\pack-trans.tsx":"75","C:\\projects\\aedokkaneh\\src\\pages\\store-trans.tsx":"76","C:\\projects\\aedokkaneh\\src\\pages\\stock-trans-details.tsx":"77","C:\\projects\\aedokkaneh\\src\\pages\\stock-trans.tsx":"78","C:\\projects\\aedokkaneh\\src\\pages\\stock-pack-trans.tsx":"79","C:\\projects\\aedokkaneh\\src\\pages\\stock.tsx":"80","C:\\projects\\aedokkaneh\\src\\pages\\order-request-details.tsx":"81","C:\\projects\\aedokkaneh\\src\\pages\\order-requests.tsx":"82","C:\\projects\\aedokkaneh\\src\\pages\\offers.tsx":"83","C:\\projects\\aedokkaneh\\src\\pages\\orders.tsx":"84","C:\\projects\\aedokkaneh\\src\\pages\\orders-list.tsx":"85","C:\\projects\\aedokkaneh\\src\\pages\\order-details.tsx":"86","C:\\projects\\aedokkaneh\\src\\pages\\monthly-trans-call.tsx":"87","C:\\projects\\aedokkaneh\\src\\pages\\store-balance-trans.tsx":"88","C:\\projects\\aedokkaneh\\src\\pages\\store-balance.tsx":"89","C:\\projects\\aedokkaneh\\src\\pages\\archived-products.tsx":"90","C:\\projects\\aedokkaneh\\src\\pages\\archived-purchases.tsx":"91","C:\\projects\\aedokkaneh\\src\\pages\\purchase-plan.tsx":"92","C:\\projects\\aedokkaneh\\src\\pages\\prepare-orders-list.tsx":"93","C:\\projects\\aedokkaneh\\src\\pages\\archived-orders.tsx":"94","C:\\projects\\aedokkaneh\\src\\pages\\prepare-orders.tsx":"95","C:\\projects\\aedokkaneh\\src\\pages\\ratings.tsx":"96","C:\\projects\\aedokkaneh\\src\\pages\\approvals.tsx":"97","C:\\projects\\aedokkaneh\\src\\pages\\edit-order.tsx":"98","C:\\projects\\aedokkaneh\\src\\pages\\archived-stock-trans.tsx":"99","C:\\projects\\aedokkaneh\\src\\pages\\monthly-trans.tsx":"100","C:\\projects\\aedokkaneh\\src\\pages\\alarms.tsx":"101","C:\\projects\\aedokkaneh\\src\\pages\\alarm-details.tsx":"102","C:\\projects\\aedokkaneh\\src\\pages\\requested-packs.tsx":"103","C:\\projects\\aedokkaneh\\src\\pages\\add-store-payment.tsx":"104","C:\\projects\\aedokkaneh\\src\\pages\\panel.tsx":"105","C:\\projects\\aedokkaneh\\src\\pages\\requested-pack-details.tsx":"106"},{"size":5477,"mtime":1623950524390,"results":"107","hashOfConfig":"108"},{"size":845,"mtime":1624434287531,"results":"109","hashOfConfig":"108"},{"size":543,"mtime":1624434484702,"results":"110","hashOfConfig":"108"},{"size":11607,"mtime":1624724799884,"results":"111","hashOfConfig":"108"},{"size":3503,"mtime":1624434322085,"results":"112","hashOfConfig":"108"},{"size":16991,"mtime":1624724933929,"results":"113","hashOfConfig":"108"},{"size":656,"mtime":1624436167839,"results":"114","hashOfConfig":"108"},{"size":9111,"mtime":1624758231519,"results":"115","hashOfConfig":"108"},{"size":16529,"mtime":1624761147377,"results":"116","hashOfConfig":"108"},{"size":1316,"mtime":1624438836542,"results":"117","hashOfConfig":"108"},{"size":2516,"mtime":1624439599069,"results":"118","hashOfConfig":"108"},{"size":1673,"mtime":1624438791926,"results":"119","hashOfConfig":"108"},{"size":82234,"mtime":1624761361746,"results":"120","hashOfConfig":"108"},{"size":2380,"mtime":1624439559009,"results":"121","hashOfConfig":"108"},{"size":3019,"mtime":1624439763454,"results":"122","hashOfConfig":"108"},{"size":1383,"mtime":1624439228548,"results":"123","hashOfConfig":"108"},{"size":2383,"mtime":1624440176299,"results":"124","hashOfConfig":"108"},{"size":3196,"mtime":1624452383739,"results":"125","hashOfConfig":"108"},{"size":3515,"mtime":1624443240608,"results":"126","hashOfConfig":"108"},{"size":3329,"mtime":1624442323394,"results":"127","hashOfConfig":"108"},{"size":1156,"mtime":1624442657757,"results":"128","hashOfConfig":"108"},{"size":4000,"mtime":1624452322310,"results":"129","hashOfConfig":"108"},{"size":4260,"mtime":1624760251306,"results":"130","hashOfConfig":"108"},{"size":1769,"mtime":1624444668792,"results":"131","hashOfConfig":"108"},{"size":3607,"mtime":1624601389569,"results":"132","hashOfConfig":"108"},{"size":1785,"mtime":1624446052842,"results":"133","hashOfConfig":"108"},{"size":3686,"mtime":1624761271748,"results":"134","hashOfConfig":"108"},{"size":2274,"mtime":1624446548841,"results":"135","hashOfConfig":"108"},{"size":1464,"mtime":1624447693308,"results":"136","hashOfConfig":"108"},{"size":1466,"mtime":1624446227985,"results":"137","hashOfConfig":"108"},{"size":1926,"mtime":1624446018905,"results":"138","hashOfConfig":"108"},{"size":4384,"mtime":1624451895026,"results":"139","hashOfConfig":"108"},{"size":4790,"mtime":1624451893907,"results":"140","hashOfConfig":"108"},{"size":2029,"mtime":1624451895906,"results":"141","hashOfConfig":"108"},{"size":6195,"mtime":1624453538056,"results":"142","hashOfConfig":"108"},{"size":3938,"mtime":1624456462138,"results":"143","hashOfConfig":"108"},{"size":6265,"mtime":1624457493852,"results":"144","hashOfConfig":"108"},{"size":5384,"mtime":1624760195792,"results":"145","hashOfConfig":"108"},{"size":2806,"mtime":1624455600482,"results":"146","hashOfConfig":"108"},{"size":5976,"mtime":1624599087690,"results":"147","hashOfConfig":"108"},{"size":6401,"mtime":1624598668821,"results":"148","hashOfConfig":"108"},{"size":2095,"mtime":1624469747239,"results":"149","hashOfConfig":"108"},{"size":8771,"mtime":1624599340192,"results":"150","hashOfConfig":"108"},{"size":9039,"mtime":1624598405577,"results":"151","hashOfConfig":"108"},{"size":4983,"mtime":1624600124161,"results":"152","hashOfConfig":"108"},{"size":1316,"mtime":1624458343612,"results":"153","hashOfConfig":"108"},{"size":10744,"mtime":1624671126152,"results":"154","hashOfConfig":"108"},{"size":5278,"mtime":1624599474865,"results":"155","hashOfConfig":"108"},{"size":5404,"mtime":1624598409824,"results":"156","hashOfConfig":"108"},{"size":4399,"mtime":1624601175538,"results":"157","hashOfConfig":"108"},{"size":5477,"mtime":1624466576332,"results":"158","hashOfConfig":"108"},{"size":6145,"mtime":1624469379216,"results":"159","hashOfConfig":"108"},{"size":4779,"mtime":1624600305505,"results":"160","hashOfConfig":"108"},{"size":4440,"mtime":1624470344220,"results":"161","hashOfConfig":"108"},{"size":4132,"mtime":1624466321146,"results":"162","hashOfConfig":"108"},{"size":1971,"mtime":1624760420265,"results":"163","hashOfConfig":"108"},{"size":2928,"mtime":1624641388655,"results":"164","hashOfConfig":"108"},{"size":2744,"mtime":1624640978065,"results":"165","hashOfConfig":"108"},{"size":1081,"mtime":1624639681357,"results":"166","hashOfConfig":"108"},{"size":1636,"mtime":1624639982740,"results":"167","hashOfConfig":"108"},{"size":356,"mtime":1624639874716,"results":"168","hashOfConfig":"108"},{"size":1151,"mtime":1624639843406,"results":"169","hashOfConfig":"108"},{"size":1751,"mtime":1624641802368,"results":"170","hashOfConfig":"108"},{"size":3802,"mtime":1624642012311,"results":"171","hashOfConfig":"108"},{"size":4853,"mtime":1624642573714,"results":"172","hashOfConfig":"108"},{"size":1150,"mtime":1624645201398,"results":"173","hashOfConfig":"108"},{"size":2930,"mtime":1624648795956,"results":"174","hashOfConfig":"108"},{"size":1634,"mtime":1624648158379,"results":"175","hashOfConfig":"108"},{"size":3151,"mtime":1624650786158,"results":"176","hashOfConfig":"108"},{"size":3369,"mtime":1624685311190,"results":"177","hashOfConfig":"108"},{"size":4026,"mtime":1624670834611,"results":"178","hashOfConfig":"108"},{"size":1996,"mtime":1624668562275,"results":"179","hashOfConfig":"108"},{"size":3917,"mtime":1624670814883,"results":"180","hashOfConfig":"108"},{"size":4778,"mtime":1624674060607,"results":"181","hashOfConfig":"108"},{"size":2136,"mtime":1624684744128,"results":"182","hashOfConfig":"108"},{"size":2145,"mtime":1624684438604,"results":"183","hashOfConfig":"108"},{"size":2235,"mtime":1624683971561,"results":"184","hashOfConfig":"108"},{"size":2040,"mtime":1624683629972,"results":"185","hashOfConfig":"108"},{"size":5943,"mtime":1624758276227,"results":"186","hashOfConfig":"108"},{"size":2922,"mtime":1624681321519,"results":"187","hashOfConfig":"108"},{"size":4643,"mtime":1624761254410,"results":"188","hashOfConfig":"108"},{"size":2049,"mtime":1624714572413,"results":"189","hashOfConfig":"108"},{"size":3669,"mtime":1624688064297,"results":"190","hashOfConfig":"108"},{"size":2362,"mtime":1624685959909,"results":"191","hashOfConfig":"108"},{"size":2932,"mtime":1624686530040,"results":"192","hashOfConfig":"108"},{"size":9476,"mtime":1624760135869,"results":"193","hashOfConfig":"108"},{"size":1332,"mtime":1624729530045,"results":"194","hashOfConfig":"108"},{"size":3129,"mtime":1624732836890,"results":"195","hashOfConfig":"108"},{"size":1674,"mtime":1624731972746,"results":"196","hashOfConfig":"108"},{"size":3740,"mtime":1624759929632,"results":"197","hashOfConfig":"108"},{"size":3260,"mtime":1624731716537,"results":"198","hashOfConfig":"108"},{"size":3035,"mtime":1624757337009,"results":"199","hashOfConfig":"108"},{"size":2732,"mtime":1624756485355,"results":"200","hashOfConfig":"108"},{"size":3289,"mtime":1624761158510,"results":"201","hashOfConfig":"108"},{"size":2560,"mtime":1624756925691,"results":"202","hashOfConfig":"108"},{"size":2397,"mtime":1624761012497,"results":"203","hashOfConfig":"108"},{"size":3183,"mtime":1624724932852,"results":"204","hashOfConfig":"108"},{"size":5354,"mtime":1624758196982,"results":"205","hashOfConfig":"108"},{"size":2854,"mtime":1624761376616,"results":"206","hashOfConfig":"108"},{"size":9366,"mtime":1624731016941,"results":"207","hashOfConfig":"108"},{"size":2284,"mtime":1624725327373,"results":"208","hashOfConfig":"108"},{"size":6218,"mtime":1624727949170,"results":"209","hashOfConfig":"108"},{"size":2718,"mtime":1624735790859,"results":"210","hashOfConfig":"108"},{"size":4137,"mtime":1624757767403,"results":"211","hashOfConfig":"108"},{"size":3074,"mtime":1624759924899,"results":"212","hashOfConfig":"108"},{"size":10408,"mtime":1624759588545,"results":"213","hashOfConfig":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"chij1t",{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"219"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"219"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"219"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"219"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"219"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"219"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"219"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},"C:\\projects\\aedokkaneh\\src\\service-worker.js",[],["435","436"],"C:\\projects\\aedokkaneh\\src\\index.tsx",[],["437","438"],"C:\\projects\\aedokkaneh\\src\\app.tsx",[],"C:\\projects\\aedokkaneh\\src\\routes.ts",[],"C:\\projects\\aedokkaneh\\src\\data\\config.ts",[],"C:\\projects\\aedokkaneh\\src\\data\\labels.ts",[],"C:\\projects\\aedokkaneh\\src\\data\\firebase.ts",[],"C:\\projects\\aedokkaneh\\src\\data\\reducer.ts",[],"C:\\projects\\aedokkaneh\\src\\data\\store.tsx",["439"],"import { createContext, useReducer, useEffect, useState } from 'react'\r\nimport Reducer from './reducer'\r\nimport firebase from './firebase'\r\nimport { iAdvert, iAlarm, iCategory, iContext, iCustomerInfo, iFriend, iLog, iMonthlyTrans, iNotification, iOrder, iPack, iPackPrice, iPasswordRequest, iProduct, iPurchase, iRating, iSpending, iStockTrans, iStore, iStorePayment, iUserInfo } from './interfaces'\r\n\r\nexport const StoreContext = createContext({} as iContext)\r\n\r\nconst Store = (props: any) => {\r\n  const localData = localStorage.getItem('basket')\r\n  const basket = localData ? JSON.parse(localData) : ''\r\n  const initState = {\r\n    categories: [], \r\n    locations: [], \r\n    countries: [],\r\n    stores: [], \r\n    basket, \r\n    users: [],\r\n    purchases: [],\r\n    orders: [],\r\n    stockTrans: [],\r\n    products: [],\r\n    packs: [],\r\n    passwordRequests: [],\r\n    customers: [],\r\n    spendings: [],\r\n    monthlyTrans: [],\r\n    packPrices: [],\r\n    logs: [],\r\n    archivedOrders: [],\r\n    adverts: [],\r\n    archivedPurchases: [],\r\n    archivedStockTrans: [],\r\n    archivedProducts: [],\r\n    archivedPacks: [],\r\n    notifications: [],\r\n    alarms: [],\r\n    ratings: [],\r\n    invitations: [],\r\n    storePayments: []\r\n  }\r\n  const [state, dispatch] = useReducer(Reducer, initState)\r\n  useEffect(() => {\r\n    const unsubscribeCategories = firebase.firestore().collection('categories').onSnapshot(docs => {\r\n      let categories: iCategory[] = []\r\n      docs.forEach(doc => {\r\n        categories.push({\r\n          id: doc.id,\r\n          parentId: doc.data().parentId,\r\n          name: doc.data().name,\r\n          ordering: doc.data().ordering,\r\n          isLeaf: doc.data().isLeaf,\r\n          isActive: doc.data().isActive\r\n        })\r\n      })\r\n      dispatch({type: 'SET_CATEGORIES', payload: categories})\r\n    }, err => {\r\n      unsubscribeCategories()\r\n    })\r\n    const unsubscribePacks = firebase.firestore().collection('packs').where('isArchived', '==', false).onSnapshot(docs => {\r\n      let packs: iPack[] = []\r\n      let packPrices: iPackPrice[] = []\r\n      docs.forEach(doc => {\r\n        packs.push({\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n          productId: doc.data().productId,\r\n          productName: doc.data().productName,\r\n          productAlias: doc.data().productAlias,\r\n          productDescription: doc.data().productDescription,\r\n          categoryId: doc.data().categoryId,\r\n          trademark: doc.data().trademark,\r\n          country: doc.data().country,\r\n          sales: doc.data().sales,\r\n          rating: doc.data().rating,\r\n          ratingCount: doc.data().ratingCount,\r\n          price: doc.data().price,\r\n          imageUrl: doc.data().imageUrl,\r\n          subPackId: doc.data().subPackId,\r\n          specialImage: doc.data().specialImage,\r\n          bonusPackId: doc.data().bonusPackId,\r\n          isOffer: doc.data().isOffer,\r\n          offerEnd: doc.data().offerEnd?.toDate() || null,\r\n          closeExpired: doc.data().closeExpired,\r\n          forSale: doc.data().forSale,\r\n          subQuantity: doc.data().subQuantity,\r\n          subPercent: doc.data().subPercent,\r\n          bonusQuantity: doc.data().bonusQuantity,\r\n          bonusPercent: doc.data().bonusPercent,\r\n          unitsCount: doc.data().unitsCount,\r\n          byWeight: doc.data().byWeight,\r\n          isDivided: doc.data().isDivided\r\n        })\r\n        if (doc.data().prices) {\r\n          doc.data().prices.forEach((p: any) => {\r\n            packPrices.push({\r\n              packId: doc.id,\r\n              storeId: p.storeId,\r\n              quantity: p.quantity,\r\n              weight: p.weight,\r\n              price: p.price,\r\n              cost: p.cost,\r\n              isActive: p.isActive,\r\n              offerEnd: p.offerEnd?.toDate() || null,\r\n              time: p.time.toDate(),\r\n              isAuto: p.isAuto\r\n            })\r\n          })\r\n        }\r\n      })\r\n      dispatch({type: 'SET_PACKS', payload: packs})\r\n      dispatch({type: 'SET_PACK_PRICES', payload: packPrices})\r\n    }, err => {\r\n      unsubscribePacks()\r\n    })\r\n    const unsubscribePasswordRequests = firebase.firestore().collection('password-requests').onSnapshot(docs => {\r\n      let passwordRequests: iPasswordRequest[] = []\r\n      docs.forEach(doc => {\r\n        passwordRequests.push({\r\n          id: doc.id,\r\n          mobile: doc.data().mobile,\r\n          status: doc.data().status,\r\n          time: doc.data().time.toDate()\r\n        })\r\n      })\r\n      dispatch({type: 'SET_PASSWORD_REQUESTS', payload: passwordRequests})\r\n    }, err => {\r\n      unsubscribePasswordRequests()\r\n    })\r\n    const unsubscribeAdverts = firebase.firestore().collection('adverts').onSnapshot(docs => {\r\n      let adverts: iAdvert[] = []\r\n      docs.forEach(doc => {\r\n        adverts.push({\r\n          id: doc.id,\r\n          type: doc.data().type,\r\n          title: doc.data().title,\r\n          text: doc.data().text,\r\n          imageUrl: doc.data().imageUrl,\r\n          isActive: doc.data().isActive,\r\n          time: doc.data().time.toDate()\r\n        })\r\n      })\r\n      dispatch({type: 'SET_ADVERTS', payload: adverts})\r\n    }, err => {\r\n      unsubscribeAdverts()\r\n    }) \r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user){\r\n        dispatch({type: 'LOGIN', payload: user})\r\n        const unsubscribeLocations = firebase.firestore().collection('lookups').doc('l').onSnapshot(doc => {\r\n          if (doc.exists) dispatch({type: 'SET_LOCATIONS', payload: doc.data()?.values})\r\n        }, err => {\r\n          unsubscribeLocations()\r\n        })  \r\n        const unsubscribeCountries = firebase.firestore().collection('lookups').doc('c').onSnapshot(doc => {\r\n          if (doc.exists) dispatch({type: 'SET_COUNTRIES', payload: doc.data()?.values})\r\n        }, err => {\r\n          unsubscribeCountries()\r\n        })\r\n        const unsubscribeProducts = firebase.firestore().collection('products').where('isArchived', '==', false).onSnapshot(docs => {\r\n          let products: iProduct[] = []\r\n          docs.forEach(doc => {\r\n            products.push({\r\n              id: doc.id,\r\n              name: doc.data().name,\r\n              alias: doc.data().alias,\r\n              description: doc.data().description,\r\n              trademark: doc.data().trademark,\r\n              country: doc.data().country,\r\n              categoryId: doc.data().categoryId,\r\n              imageUrl: doc.data().imageUrl,\r\n              sales: doc.data().sales,\r\n              rating: doc.data().rating,\r\n              ratingCount: doc.data().ratingCount,\r\n              isArchived: doc.data().isArchived\r\n            })\r\n          })\r\n          dispatch({type: 'SET_PRODUCTS', payload: products})\r\n        }, err => {\r\n          unsubscribeProducts()\r\n        })    \r\n        const unsubscribeOrders = firebase.firestore().collection('orders').where('isArchived', '==', false).onSnapshot(docs => {\r\n          let orders: iOrder[] = []\r\n          docs.forEach(doc => {\r\n            orders.push({\r\n              id: doc.id,\r\n              userId: doc.data().userId,\r\n              status: doc.data().status,\r\n              requestType: doc.data().requestType,\r\n              total: doc.data().total,\r\n              deliveryTime: doc.data().deliveryTime,\r\n              deliveryFees: doc.data().deliveryFees,\r\n              discount: doc.data().discount,\r\n              fixedFees: doc.data().fixedFees,\r\n              fraction: doc.data().fraction,\r\n              profit: doc.data().profit,\r\n              lastUpdate: doc.data().lastUpdate?.toDate() || null,\r\n              requestTime: doc.data().requestTime?.toDate() || null,\r\n              basket: doc.data().basket,\r\n              requestBasket: doc.data().requestBasket,\r\n              time: doc.data().time.toDate()\r\n          })\r\n          })\r\n          dispatch({type: 'SET_ORDERS', payload: orders})\r\n        }, err => {\r\n          unsubscribeOrders()\r\n        })  \r\n        const unsubscribeUsers = firebase.firestore().collection('users').onSnapshot(docs => {\r\n          const users: iUserInfo[] = []\r\n          const notifications: iNotification[] = []\r\n          const alarms: iAlarm[] = []\r\n          const ratings: iRating[] = []\r\n          const invitations: iFriend[] = []\r\n          docs.forEach(doc => {\r\n            users.push({\r\n              id: doc.id,\r\n              name: doc.data().name,\r\n              mobile: doc.data().mobile,\r\n              storeName: doc.data().storeName,\r\n              colors: doc.data().colors,\r\n              locationId: doc.data().locationId,\r\n              time: doc.data().time.toDate()\r\n            })\r\n            if (doc.data().notifications) {\r\n              doc.data().notifications.forEach((n: any) => {\r\n                notifications.push({\r\n                  userId: doc.id,\r\n                  id: n.id,\r\n                  title: n.title,\r\n                  message: n.message,\r\n                  status: n.status,\r\n                  time: n.time.toDate()\r\n                })\r\n              })\r\n            }\r\n            if (doc.data().alarms) {\r\n              doc.data().alarms.forEach((a: any) => {\r\n                alarms.push({...a, userId: doc.id})\r\n              })\r\n            }\r\n            if (doc.data().ratings) {\r\n              doc.data().ratings.forEach((r: any) => {\r\n                ratings.push({...r, userId: doc.id})\r\n              })\r\n            }\r\n            if (doc.data().friends) {\r\n              doc.data().friends.forEach((f: any) => {\r\n                invitations.push({...f, userId: doc.id})\r\n              })\r\n            }\r\n          })\r\n          dispatch({type: 'SET_USERS', payload: users})\r\n          dispatch({type: 'SET_NOTIFICATIONS', payload: notifications})\r\n          dispatch({type: 'SET_ALARMS', payload: alarms})\r\n          dispatch({type: 'SET_RATINGS', payload: ratings})\r\n          dispatch({type: 'SET_INVITATIONS', payload: invitations})\r\n        }, err => {\r\n          unsubscribeUsers()\r\n        })  \r\n        const unsubscribeCustomers = firebase.firestore().collection('customers').onSnapshot(docs => {\r\n          let customers: iCustomerInfo[] = []\r\n          docs.forEach(doc => {\r\n            customers.push({\r\n              id: doc.id,\r\n              name: doc.data().name,\r\n              storeId: doc.data().storeId,\r\n              storeName: doc.data().storeName,\r\n              orderLimit: doc.data().orderLimit,\r\n              isBlocked: doc.data().isBlocked,\r\n              address: doc.data().address,\r\n              deliveryFees: doc.data().deliveryFees,\r\n              specialDiscount: doc.data().specialDiscount,\r\n              discounts: doc.data().discounts,\r\n              mapPosition: doc.data().mapPosition,\r\n              ordersCount: doc.data().ordersCount,\r\n              deliveredOrdersCount: doc.data().deliveredOrdersCount,\r\n              returnedCount: doc.data().returnedCount,\r\n              deliveredOrdersTotal: doc.data().deliveredOrdersTotal,\r\n              time: doc.data().time.toDate()\r\n            })\r\n          })\r\n          dispatch({type: 'SET_CUSTOMERS', payload: customers})\r\n        }, err => {\r\n          unsubscribeCustomers()\r\n        })  \r\n        const unsubscribeStores = firebase.firestore().collection('stores').onSnapshot(docs => {\r\n          let stores: iStore[] = []\r\n          let storePayments: iStorePayment[] = []\r\n          docs.forEach(doc => {\r\n            stores.push({\r\n              id: doc.id,\r\n              name: doc.data().name,\r\n              type: doc.data().type,\r\n              discount: doc.data().discount,\r\n              isActive: doc.data().isActive,\r\n              allowReturn: doc.data().allowReturn,\r\n              mobile: doc.data().mobile,\r\n              mapPosition: doc.data().mapPosition,\r\n              openTime: doc.data().openTime,\r\n              address: doc.data().address,\r\n              time: doc.data().time.toDate(),\r\n              balances: doc.data().balances\r\n            })\r\n            if (doc.data().payments) {\r\n              doc.data().payments.forEach((p: any) => {\r\n                storePayments.push({...p, storeId: doc.id, storeInfo: doc.data()})\r\n              })\r\n            }\r\n          })\r\n          dispatch({type: 'SET_STORES', payload: stores})\r\n          dispatch({type: 'SET_STORE_PAYMENTS', payload: storePayments})\r\n        }, err => {\r\n          unsubscribeStores()\r\n        })  \r\n        const unsubscribePurchases = firebase.firestore().collection('purchases').where('isArchived', '==', false).onSnapshot(docs => {\r\n          let purchases: iPurchase[] = []\r\n          docs.forEach(doc => {\r\n            purchases.push({\r\n              id: doc.id,\r\n              storeId: doc.data().storeId,\r\n              total: doc.data().total,\r\n              time: doc.data().time.toDate(),\r\n              isArchived: doc.data().isArchived,\r\n              basket: doc.data().basket\r\n            })\r\n          })\r\n          dispatch({type: 'SET_PURCHASES', payload: purchases})\r\n        }, err => {\r\n          unsubscribePurchases()\r\n        })  \r\n        const unsubscribeStockTrans = firebase.firestore().collection('stock-trans').where('isArchived', '==', false).onSnapshot(docs => {\r\n          let stockTrans: iStockTrans[] = []\r\n          docs.forEach(doc => {\r\n            stockTrans.push({\r\n              id: doc.id,\r\n              purchaseId: doc.data().purchaseId,\r\n              type: doc.data().type,\r\n              total: doc.data().total,\r\n              storeId: doc.data().storeId,\r\n              time: doc.data().time.toDate(),\r\n              basket: doc.data().basket\r\n            })\r\n          })\r\n          dispatch({type: 'SET_STOCK_TRANS', payload: stockTrans})\r\n        }, err => {\r\n          unsubscribeStockTrans()\r\n        })  \r\n        const unsubscribeSpendings = firebase.firestore().collection('spendings').onSnapshot(docs => {\r\n          let spendings: iSpending[] = []\r\n          docs.forEach(doc => {\r\n            spendings.push({\r\n              id: doc.id,\r\n              type: doc.data().type,\r\n              amount: doc.data().amount,\r\n              spendingDate: doc.data().spendingDate.toDate(),\r\n              description: doc.data().description,\r\n              time: doc.data().time.toDate()\r\n            })\r\n          })\r\n          dispatch({type: 'SET_SPENDINGS', payload: spendings})\r\n        }, err => {\r\n          unsubscribeSpendings()\r\n        })  \r\n        const unsubscribeMonthlyTrans = firebase.firestore().collection('monthly-trans').onSnapshot(docs => {\r\n          let monthlyTrans: iMonthlyTrans[] = []\r\n          docs.forEach(doc => {\r\n            monthlyTrans.push({\r\n              id: doc.data().id,\r\n              ordersCount: doc.data().ordersCount,\r\n              deliveredOrdersCount: doc.data().deliveredOrdersCount,\r\n              finishedOrdersCount: doc.data().finishedOrdersCount,\r\n              stock: doc.data().stock,\r\n              sales: doc.data().sales,\r\n              transProfit: doc.data().transProfit,\r\n              fixedFees: doc.data().fixedFees,\r\n              deliveryFees: doc.data().deliveryFees,\r\n              fractions: doc.data().fractions,\r\n              discounts: doc.data().discounts,\r\n              specialDiscounts: doc.data().specialDiscounts,\r\n              storesBalance: doc.data().storesBalance,\r\n              donations: doc.data().donations,\r\n              damages: doc.data().damages,\r\n              storesProfit: doc.data().storesProfit,\r\n              storeTransNet: doc.data().storeTransNet,\r\n              withdrawals: doc.data().withdrawals,\r\n              expenses: doc.data().expenses,\r\n              netProfit: doc.data().netProfit\r\n            })\r\n          })\r\n          dispatch({type: 'SET_MONTHLY_TRANS', payload: monthlyTrans})\r\n        }, err => {\r\n          unsubscribeMonthlyTrans()\r\n        })  \r\n        const unsubscribeLogs = firebase.firestore().collection('logs').onSnapshot(docs => {\r\n          let logs: iLog[] = []\r\n          docs.forEach(doc => {\r\n            logs.push({\r\n              id: doc.id,\r\n              userId: doc.data().userId,\r\n              page: doc.data().page,\r\n              error: doc.data().error,\r\n              time: doc.data().time.toDate()\r\n            })\r\n          })\r\n          dispatch({type: 'SET_LOGS', payload: logs})\r\n        }, err => {\r\n          unsubscribeLogs()\r\n        })  \r\n      } else {\r\n        dispatch({type: 'LOGOUT'})\r\n      }\r\n    })\r\n  }, [])\r\n  return (\r\n    <StoreContext.Provider value={{state, dispatch}}>\r\n      {props.children}\r\n    </StoreContext.Provider>\r\n  )\r\n}\r\n \r\nexport default Store\r\n\r\n","C:\\projects\\aedokkaneh\\src\\pages\\countries.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-country.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-country.tsx",[],"C:\\projects\\aedokkaneh\\src\\data\\actionst.ts",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-location.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-location.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\locations.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\logs.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-advert.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\adverts.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-advert.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\advert-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-category.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\categories.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-category.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\permission-list.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\register.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\permit-user.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\retreive-password.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\new-users.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\password-requests.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\login.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\approve-user.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\customer-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\customers.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-customer.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\store-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-store.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-store.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\stores.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-bulk.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-bulk.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\product-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-offer.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-offer.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-pack-store.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\store-owners.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\pack-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-pack.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-pack.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-price.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-product.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-product.tsx",["440"],"import { useState, useContext, useEffect, ChangeEvent } from 'react'\r\nimport { f7, Page, Navbar, List, ListItem, ListInput, Fab, Icon } from 'framework7-react'\r\nimport { StoreContext } from '../data/store'\r\nimport { editProduct, showMessage, showError, getMessage } from '../data/actionst'\r\nimport labels from '../data/labels'\r\n\r\ninterface Props {\r\n  id: string\r\n}\r\nconst EditProduct = (props: Props) => {\r\n  const { state } = useContext(StoreContext)\r\n  const [error, setError] = useState('')\r\n  const [product] = useState(() => state.products.find(p => p.id === props.id)!)\r\n  const [name, setName] = useState(product.name)\r\n  const [alias, setAlias] = useState(product.alias)\r\n  const [description, setDescription] = useState(product.description)\r\n  const [categoryId, setCategoryId] = useState(product.categoryId)\r\n  const [trademark, setTrademark] = useState(product.trademark)\r\n  const [country, setCountry] = useState(product.country)\r\n  const [imageUrl, setImageUrl] = useState(product.imageUrl)\r\n  const [image, setImage] = useState<File>()\r\n  const [fileErrorMessage, setFileErrorMessage] = useState('')\r\n  const [hasChanged, setHasChanged] = useState(false)\r\n  const [categories] = useState(() => [...state.categories].sort((c1, c2) => c1.name > c2.name ? 1 : -1))\r\n  const [countries] = useState(() => [...state.countries].sort((c1, c2) => c1 > c2 ? 1 : -1))\r\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files\r\n    if (!files) return\r\n    const filename = files[0].name\r\n    if (filename.lastIndexOf('.') <= 0) {\r\n      setError(labels.invalidFile)\r\n      return\r\n    }\r\n    const fileReader = new FileReader()\r\n    fileReader.addEventListener('load', () => {\r\n      if (fileReader.result) setImageUrl(fileReader.result.toString())\r\n    })\r\n    fileReader.readAsDataURL(files[0])\r\n    setImage(files[0])\r\n  }\r\n  useEffect(() => {\r\n    if (name !== product.name\r\n    || alias !== product.alias\r\n    || description !== product.description\r\n    || country !== product.country\r\n    || categoryId !== product.categoryId\r\n    || trademark !== product.trademark\r\n    || imageUrl !== product.imageUrl) setHasChanged(true)\r\n    else setHasChanged(false)\r\n  }, [product, name, alias, description, country, categoryId, trademark, imageUrl])\r\n  useEffect(() => {\r\n    if (error) {\r\n      showError(error)\r\n      setError('')\r\n    }\r\n  }, [error])\r\n  const handleSubmit = () => {\r\n    try{\r\n      if (state.products.find(p => p.id !== product.id && p.categoryId === categoryId && p.country === country && p.name === name && p.alias === alias)) {\r\n        throw new Error('duplicateProduct')\r\n      }\r\n      const newProduct = {\r\n        ...product,\r\n        categoryId,\r\n        name,\r\n        alias,\r\n        description,\r\n        trademark,\r\n        country,\r\n      }\r\n      editProduct(newProduct, product.name, state.packs, image)\r\n      showMessage(labels.editSuccess)\r\n      f7.views.current.router.back()\r\n    } catch(err) {\r\n\t\t\tsetError(getMessage(f7.views.current.router.currentRoute.path, err))\r\n\t\t}\r\n  }\r\n  return (\r\n    <Page>\r\n      <Navbar title={labels.editProduct} backLink={labels.back} />\r\n      <List form inlineLabels>\r\n        <ListInput \r\n          name=\"name\" \r\n          label={labels.name}\r\n          clearButton\r\n          type=\"text\" \r\n          value={name} \r\n          onChange={e => setName(e.target.value)}\r\n          onInputClear={() => setName('')}\r\n        />\r\n        <ListInput \r\n          name=\"alias\" \r\n          label={labels.alias}\r\n          clearButton\r\n          type=\"text\" \r\n          value={alias} \r\n          onChange={e => setAlias(e.target.value)}\r\n          onInputClear={() => setAlias('')}\r\n        />\r\n        <ListInput \r\n          name=\"description\" \r\n          label={labels.description}\r\n          clearButton\r\n          type=\"text\" \r\n          value={description} \r\n          onChange={e => setDescription(e.target.value)}\r\n          onInputClear={() => setDescription('')}\r\n        />\r\n        <ListInput \r\n          name=\"trademark\" \r\n          label={labels.trademark}\r\n          clearButton\r\n          type=\"text\" \r\n          value={trademark} \r\n          onChange={e => setTrademark(e.target.value)}\r\n          onInputClear={() => setTrademark('')}\r\n        />\r\n        <ListItem\r\n          title={labels.category}\r\n          smartSelect\r\n          smartSelectParams={{\r\n            openIn: \"popup\", \r\n            closeOnSelect: true, \r\n            searchbar: true, \r\n            searchbarPlaceholder: labels.search,\r\n            popupCloseLinkText: labels.close\r\n          }}\r\n        >\r\n          <select name=\"categoryId\" value={categoryId} onChange={e => setCategoryId(e.target.value)}>\r\n            <option value=\"\"></option>\r\n            {categories.map(c => \r\n              <option key={c.id} value={c.id}>{c.name}</option>\r\n            )}\r\n          </select>\r\n        </ListItem>\r\n        <ListItem\r\n          title={labels.country}\r\n          smartSelect\r\n          smartSelectParams={{\r\n            openIn: \"popup\", \r\n            closeOnSelect: true, \r\n            searchbar: true, \r\n            searchbarPlaceholder: labels.search,\r\n            popupCloseLinkText: labels.close\r\n          }}\r\n        >\r\n          <select name=\"country\" value={country} onChange={e => setCountry(e.target.value)}>\r\n            <option value=\"\"></option>\r\n            {countries.map(c => \r\n              <option key={c} value={c}>{c}</option>\r\n            )}\r\n          </select>\r\n        </ListItem>\r\n        <ListInput \r\n          name=\"image\" \r\n          label=\"Image\" \r\n          type=\"file\" \r\n          accept=\"image/*\" \r\n          errorMessage={fileErrorMessage}\r\n          errorMessageForce\r\n          onChange={e => handleFileChange(e)}\r\n        />\r\n        <img src={imageUrl} className=\"img-card\" alt={labels.noImage} />\r\n      </List>\r\n      {!name || !categoryId || !country || !hasChanged ? '' :\r\n        <Fab position=\"left-top\" slot=\"fixed\" color=\"green\" className=\"top-fab\" onClick={() => handleSubmit()}>\r\n          <Icon material=\"done\"></Icon>\r\n        </Fab>\r\n      }\r\n    </Page>\r\n  )\r\n}\r\nexport default EditProduct\r\n","C:\\projects\\aedokkaneh\\src\\pages\\add-store-pack.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\product-packs.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\products.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\change-password.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\notifications.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-notification.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\settings.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\home.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\not-found-page.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\rating-stars.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\spendings.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-spending.tsx",["441"],"import { useState, useEffect } from 'react'\r\nimport { f7, Page, Navbar, List, ListItem, ListInput, Fab, Icon } from 'framework7-react'\r\nimport labels from '../data/labels'\r\nimport { spendingTypes } from '../data/config'\r\nimport { addSpending, showMessage, showError, getMessage } from '../data/actionst'\r\n\r\nconst AddSpending = () => {\r\n  const [error, setError] = useState('')\r\n  const [type, setType] = useState('')\r\n  const [amount, setAmount] = useState('')\r\n  const [spendingDate, setSpendingDate] = useState([new Date()])\r\n  const [spendingDateErrorMessage, setSpendingDateErrorMessage] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  // useEffect(() => {\r\n  //   const validateDate = value => {\r\n  //     if (new Date(value) > new Date()){\r\n  //       setSpendingDateErrorMessage(labels.invalidSpendingDate)\r\n  //     } else {\r\n  //       setSpendingDateErrorMessage('')\r\n  //     }\r\n  //   }\r\n  //   if (spendingDate.length > 0) validateDate(spendingDate)\r\n  //   else setSpendingDateErrorMessage('')\r\n  // }, [spendingDate])\r\n  useEffect(() => {\r\n    if (error) {\r\n      showError(error)\r\n      setError('')\r\n    }\r\n  }, [error])\r\n  const handleSubmit = () => {\r\n    try{\r\n      if (Number(amount) <= 0 || Number(amount) !== Number(Number(amount).toFixed(2))) {\r\n        throw new Error('invalidValue')\r\n      }\r\n      // const formatedDate = spendingDate.length > 0 ? new Date(spendingDate) : ''\r\n      const formatedDate = new Date()\r\n      addSpending({\r\n        type,\r\n        amount: +amount * 100,\r\n        spendingDate: formatedDate,\r\n        description,\r\n        time: new Date()\r\n      })\r\n      showMessage(labels.addSuccess)\r\n      f7.views.current.router.back()\r\n    } catch(err) {\r\n\t\t\tsetError(getMessage(f7.views.current.router.currentRoute.path, err))\r\n\t\t}\r\n  }\r\n  return (\r\n    <Page>\r\n      <Navbar title={labels.newSpending} backLink={labels.back} />\r\n      <List form inlineLabels>\r\n        <ListInput \r\n          name=\"amount\" \r\n          label={labels.amount}\r\n          value={amount}\r\n          clearButton \r\n          type=\"number\" \r\n          onChange={e => setAmount(e.target.value)}\r\n          onInputClear={() => setAmount('')}\r\n        />\r\n        <ListItem\r\n          title={labels.type}\r\n          smartSelect\r\n          smartSelectParams={{\r\n            openIn: \"popup\", \r\n            closeOnSelect: true, \r\n            searchbar: true, \r\n            searchbarPlaceholder: labels.search,\r\n            popupCloseLinkText: labels.close\r\n          }}\r\n        >\r\n          <select name=\"type\" value={type} onChange={e => setType(e.target.value)}>\r\n            <option value=\"\"></option>\r\n            {spendingTypes.map(t => \r\n              <option key={t.id} value={t.id}>{t.name}</option>\r\n            )}\r\n          </select>\r\n        </ListItem>\r\n        <ListInput \r\n          name=\"description\" \r\n          label={labels.description}\r\n          value={description}\r\n          clearButton \r\n          type=\"text\" \r\n          onChange={e => setDescription(e.target.value)}\r\n          onInputClear={() => setDescription('')}\r\n        />\r\n        <ListInput\r\n          name=\"spendingDate\"\r\n          label={labels.spendingDate}\r\n          type=\"datepicker\"\r\n          value={spendingDate} \r\n          clearButton\r\n          errorMessage={spendingDateErrorMessage}\r\n          errorMessageForce\r\n          onCalendarChange={value => setSpendingDate(value)}\r\n          onInputClear={() => setSpendingDate([])}\r\n        />\r\n      </List>\r\n      {!amount || !type || !spendingDate || spendingDateErrorMessage ? '' :\r\n        <Fab position=\"left-top\" slot=\"fixed\" color=\"green\" className=\"top-fab\" onClick={() => handleSubmit()}>\r\n          <Icon material=\"done\"></Icon>\r\n        </Fab>\r\n      }\r\n    </Page>\r\n  )\r\n}\r\nexport default AddSpending\r\n","C:\\projects\\aedokkaneh\\src\\pages\\edit-spending.tsx",["442"],"import { useState, useContext, useEffect } from 'react'\r\nimport { editSpending, showMessage, showError, getMessage } from '../data/actionst'\r\nimport { f7, Page, Navbar, List, ListInput, Fab, Icon, Toolbar, ListItem } from 'framework7-react'\r\nimport { StoreContext } from '../data/store'\r\nimport BottomToolbar from './bottom-toolbar'\r\nimport labels from '../data/labels'\r\nimport { spendingTypes } from '../data/config'\r\n\r\ninterface Props {\r\n  id: string\r\n}\r\nconst EditSpending = (props: Props) => {\r\n  const { state } = useContext(StoreContext)\r\n  const [error, setError] = useState('')\r\n  const [spending] = useState(() => state.spendings.find(s => s.id === props.id)!)\r\n  const [type, setType] = useState(spending.type)\r\n  const [amount, setAmount] = useState((spending.amount / 100).toFixed(2))\r\n  const [spendingDate, setSpendingDate] = useState(() => spending.spendingDate ? [spending.spendingDate] : '')\r\n  const [spendingDateErrorMessage, setSpendingDateErrorMessage] = useState('')\r\n  const [description, setDescription] = useState(spending.description)\r\n  const [hasChanged, setHasChanged] = useState(false)\r\n  // useEffect(() => {\r\n  //   const validateDate = value => {\r\n  //     if (new Date(value) > new Date()){\r\n  //       setSpendingDateErrorMessage(labels.invalidSpendingDate)\r\n  //     } else {\r\n  //       setSpendingDateErrorMessage('')\r\n  //     }\r\n  //   }\r\n  //   if (spendingDate.length > 0) validateDate(spendingDate)\r\n  //   else setSpendingDateErrorMessage('')\r\n  // }, [spendingDate])\r\n  useEffect(() => {\r\n    if (error) {\r\n      showError(error)\r\n      setError('')\r\n    }\r\n  }, [error])\r\n  const handleEdit = () => {\r\n    try{\r\n      if (Number(amount) <= 0 || Number(amount) !== Number(Number(amount).toFixed(2))) {\r\n        throw new Error('invalidValue')\r\n      }\r\n      // const formatedDate = spendingDate.length > 0 ? new Date(spendingDate) : ''\r\n      const formatedDate = new Date()\r\n      const newSpending = {\r\n        ...spending,\r\n        type,\r\n        amount: +amount * 100,\r\n        spendingDate: formatedDate,\r\n        description\r\n      }\r\n      editSpending(newSpending)\r\n      showMessage(labels.editSuccess)\r\n      f7.views.current.router.back()\r\n    } catch(err) {\r\n\t\t\tsetError(getMessage(f7.views.current.router.currentRoute.path, err))\r\n\t\t}    \r\n  }\r\n  useEffect(() => {\r\n    if (+amount * 100 !== spending.amount\r\n    || type !== spending.type\r\n    || description !== spending.description\r\n    || (!spending.spendingDate && spendingDate.length > 0)\r\n    || (spending.spendingDate && spendingDate.length === 0)\r\n    // || (spending.spendingDate.toDate()).toString() !== (new Date(spendingDate)).toString()\r\n    ) setHasChanged(true)\r\n    else setHasChanged(false)\r\n  }, [spending, amount, spendingDate, type, description])\r\n\r\n  return (\r\n    <Page>\r\n      <Navbar title={labels.editSpending} backLink={labels.back} />\r\n      <List form inlineLabels>\r\n      <ListInput \r\n          name=\"amount\" \r\n          label={labels.amount}\r\n          value={amount}\r\n          clearButton \r\n          type=\"number\" \r\n          onChange={e => setAmount(e.target.value)}\r\n          onInputClear={() => setAmount('')}\r\n        />\r\n        <ListItem\r\n          title={labels.type}\r\n          smartSelect\r\n          smartSelectParams={{\r\n            openIn: \"popup\", \r\n            closeOnSelect: true, \r\n            searchbar: true, \r\n            searchbarPlaceholder: labels.search,\r\n            popupCloseLinkText: labels.close\r\n          }}\r\n        >\r\n          <select name=\"type\" value={type} onChange={e => setType(e.target.value)}>\r\n            <option value=\"\"></option>\r\n            {spendingTypes.map(t => \r\n              <option key={t.id} value={t.id}>{t.name}</option>\r\n            )}\r\n          </select>\r\n        </ListItem>\r\n        <ListInput \r\n          name=\"description\" \r\n          label={labels.description}\r\n          value={description}\r\n          clearButton \r\n          type=\"text\" \r\n          onChange={e => setDescription(e.target.value)}\r\n          onInputClear={() => setDescription('')}\r\n        />\r\n        <ListInput\r\n          name=\"spendingDate\"\r\n          label={labels.spendingDate}\r\n          type=\"datepicker\"\r\n          value={spendingDate} \r\n          clearButton\r\n          errorMessage={spendingDateErrorMessage}\r\n          errorMessageForce\r\n          onCalendarChange={value => setSpendingDate(value)}\r\n          onInputClear={() => setSpendingDate([])}\r\n        />\r\n      </List>\r\n      {!amount || !type || !spendingDate || spendingDateErrorMessage || !hasChanged ? '' :\r\n        <Fab position=\"left-top\" slot=\"fixed\" color=\"green\" className=\"top-fab\" onClick={() => handleEdit()}>\r\n          <Icon material=\"done\"></Icon>\r\n        </Fab>\r\n      }\r\n      <Toolbar bottom>\r\n        <BottomToolbar/>\r\n      </Toolbar>\r\n\r\n    </Page>\r\n  )\r\n}\r\nexport default EditSpending\r\n","C:\\projects\\aedokkaneh\\src\\pages\\bottom-toolbar.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\invitation-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\invitations.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\basket.tsx",["443"],"import { useContext, useEffect, useState } from 'react'\r\nimport { f7, Block, Fab, Page, Navbar, List, ListItem, Toolbar, Link, Icon, Stepper, Badge } from 'framework7-react'\r\nimport { StoreContext } from '../data/store'\r\nimport { quantityText } from '../data/actionst'\r\nimport labels from '../data/labels'\r\nimport { iBasketPack } from '../data/interfaces'\r\n\r\nconst Basket = () => {\r\n  const { state, dispatch } = useContext(StoreContext)\r\n  const [store] = useState(() => state.stores.find(s => s.id === state.basket?.storeId))\r\n  const [basket, setBasket] = useState<iBasketPack[]>([])\r\n  const [totalPrice, setTotalPrice] = useState(0)\r\n  useEffect(() => {\r\n    if (!state.basket?.packs) f7.views.current.router.navigate('/home/', {reloadAll: true})\r\n  }, [state.basket, f7.views.current.router])\r\n  useEffect(() => {\r\n    setBasket(() => state.basket?.packs || [])\r\n    setTotalPrice(() => state.basket?.packs?.reduce((sum, p) => sum + Math.round(p.cost * (p.weight || p.quantity)), 0) || 0)\r\n  }, [state.basket])\r\n  const handleAdd = (pack: iBasketPack) => {\r\n    if (store?.id === 's') {\r\n      const stock = state.packPrices.find(p => p.packId === pack.packId && p.storeId === 's')\r\n      if (pack.quantity === pack.requested) return\r\n      if (pack.quantity === stock?.quantity) return\r\n    }\r\n    if (pack.isDivided) return\r\n    if (pack.orderId && pack.quantity === pack.requested) return\r\n    dispatch({type: 'INCREASE_QUANTITY', payload: pack})\r\n  }\r\n  let i = 0  \r\n  return (\r\n    <Page>\r\n      <Navbar title={`${labels.basketFrom} ${store?.name}`} backLink={labels.back} />\r\n      <Block>\r\n        <List mediaList>\r\n          {basket.map(p => \r\n            <ListItem\r\n              title={p.productName}\r\n              subtitle={p.productAlias}\r\n              text={p.packName}\r\n              footer={`${labels.grossPrice}: ${(Math.round(p.cost * (p.weight || p.quantity)) / 100).toFixed(2)}`}\r\n              key={i++}\r\n            >\r\n              <img src={p.imageUrl} slot=\"media\" className=\"img-list\" alt={labels.noImage} />\r\n              <div className=\"list-subtext1\">{`${labels.unitPrice}: ${(p.cost / 100).toFixed(2)}`}</div>\r\n              <div className=\"list-subtext2\">{`${labels.quantity}: ${quantityText(p.quantity, p.weight)}`}</div>\r\n              {p.closeExpired ? <Badge slot=\"text\" color=\"red\">{labels.closeExpired}</Badge> : ''}\r\n              <Stepper\r\n                slot=\"after\"\r\n                fill\r\n                buttonsOnly\r\n                onStepperPlusClick={() => handleAdd(p)}\r\n                onStepperMinusClick={() => dispatch({type: 'DECREASE_QUANTITY', payload: p})}\r\n              />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n      </Block>\r\n      <Fab position=\"center-bottom\" slot=\"fixed\" text={`${labels.submit} ${(totalPrice / 100).toFixed(2)}`} color=\"green\" href=\"/confirm-purchase/\">\r\n        <Icon material=\"done\"></Icon>\r\n      </Fab>\r\n\r\n      <Toolbar bottom>\r\n        <Link href='/home/' iconMaterial=\"home\" />\r\n        <Link href='#' iconMaterial=\"delete\" onClick={() => dispatch({type: 'CLEAR_BASKET'})} />\r\n      </Toolbar>\r\n    </Page>\r\n  )\r\n}\r\nexport default Basket\r\n","C:\\projects\\aedokkaneh\\src\\pages\\confirm-purchase.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\purchase-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\purchases.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\store-packs.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\return-basket.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\pack-trans.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\store-trans.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\stock-trans-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\stock-trans.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\stock-pack-trans.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\stock.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\order-request-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\order-requests.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\offers.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\orders.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\orders-list.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\order-details.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\monthly-trans-call.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\store-balance-trans.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\store-balance.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\archived-products.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\archived-purchases.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\purchase-plan.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\prepare-orders-list.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\archived-orders.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\prepare-orders.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\ratings.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\approvals.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\edit-order.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\archived-stock-trans.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\monthly-trans.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\alarms.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\alarm-details.tsx",["444"],"import { useContext, useState, useEffect } from 'react'\r\nimport { f7, Page, Navbar, List, ListItem, Icon, Fab, Toolbar, ListInput, BlockTitle } from 'framework7-react'\r\nimport BottomToolbar from './bottom-toolbar'\r\nimport { StoreContext } from '../data/store'\r\nimport moment from 'moment'\r\nimport 'moment/locale/ar'\r\nimport { approveAlarm, showMessage, showError, getMessage } from '../data/actionst'\r\nimport labels from '../data/labels'\r\nimport { alarmTypes } from '../data/config'\r\nimport { iPack, iPackPrice, iStore } from '../data/interfaces'\r\n\r\ninterface Props {\r\n  id: string,\r\n  userId: string\r\n}\r\ninterface ExtendedPackPrice extends iPackPrice {\r\n  storeInfo: iStore\r\n}\r\nconst AlarmDetails = (props: Props) => {\r\n  const { state } = useContext(StoreContext)\r\n  const [error, setError] = useState('')\r\n  const [newPackId, setNewPackId] = useState('')\r\n  const [userInfo] = useState(() => state.users.find(u => u.id === props.userId))\r\n  const [customerInfo] = useState(() => state.customers.find(c => c.id === props.userId)!)\r\n  const [alarm] = useState(() => state.alarms.find(a => a.id === props.id)!)\r\n  const [pack] = useState(() => state.packs.find(p => p.id === alarm.packId)!)\r\n  const [storeName] = useState(() => state.stores.find(s => s.id === customerInfo.storeId)?.name)\r\n  const [prices, setPrices] = useState<ExtendedPackPrice[]>([])\r\n  const [packs] = useState(() => {\r\n    const packs = state.packs.filter(p => p.id !== pack.id)\r\n    let result: iPack[] = []\r\n    if (alarm.type === 'go') {\r\n      result = packs.filter(p => p.productId === pack.productId && p.isOffer)\r\n    } else if (alarm.type === 'eo') {\r\n      result = packs.filter(p => p.productId === pack.productId && p.isOffer && p.closeExpired)\r\n    }\r\n    const output = result.map(p => {\r\n      return {\r\n        id: p.id,\r\n        name: `${p.productName} ${p.name}`\r\n      }\r\n    })\r\n    return output.sort((p1, p2) => p1.name > p2.name ? 1 : -1)\r\n  })\r\n  useEffect(() => {\r\n    setPrices(() => {\r\n      const prices = state.packPrices.filter(p => p.storeId !== customerInfo.storeId && p.packId === (newPackId || pack.id))\r\n      const result = prices.map(p => {\r\n        const storeInfo = state.stores.find(s => s.id === p.storeId)!\r\n        return {\r\n          ...p,\r\n          storeInfo\r\n        }\r\n      })\r\n      return result.sort((p1, p2) => p1.price - p2.price)\r\n    })\r\n  }, [state.packPrices, state.stores, customerInfo, pack, newPackId])\r\n  useEffect(() => {\r\n    if (error) {\r\n      showError(error)\r\n      setError('')\r\n    }\r\n  }, [error])\r\n  const handleApprove = () => {\r\n    try{\r\n      approveAlarm(alarm, state.alarms, newPackId, customerInfo, state.packPrices, state.packs)\r\n      showMessage(labels.approveSuccess)\r\n\t\t\tf7.views.current.router.back()\r\n    } catch(err) {\r\n\t\t\tsetError(getMessage(f7.views.current.router.currentRoute.path, err))\r\n\t\t}\r\n  }\r\n  let i = 0\r\n  return (\r\n    <Page>\r\n      <Navbar title={alarmTypes.find(t => t.id === alarm.type)?.name} backLink={labels.back} />\r\n      <Fab position=\"left-top\" slot=\"fixed\" color=\"green\" className=\"top-fab\" onClick={() => handleApprove()}>\r\n        <Icon material=\"done\"></Icon>\r\n      </Fab>\r\n      <List form inlineLabels>\r\n        <ListInput \r\n          name=\"userName\" \r\n          label={labels.user}\r\n          value={customerInfo.name}\r\n          type=\"text\" \r\n          readonly\r\n        />\r\n        <ListInput \r\n          name=\"productName\" \r\n          label={labels.product}\r\n          value={pack.productName}\r\n          type=\"text\" \r\n          readonly\r\n        />\r\n        <ListInput \r\n          name=\"packName\" \r\n          label={labels.pack}\r\n          value={pack.name}\r\n          type=\"text\" \r\n          readonly\r\n        />\r\n        <ListInput \r\n          name=\"currentPrice\" \r\n          label={labels.currentPrice}\r\n          value={(pack.price / 100).toFixed(2)}\r\n          type=\"number\" \r\n          readonly\r\n        />\r\n        {alarm.type === 'aa' ? \r\n          <ListInput \r\n            name=\"alternative\" \r\n            label={labels.alternative}\r\n            value={alarm.alternative}\r\n            type=\"text\" \r\n            readonly\r\n          />\r\n        : ''}\r\n        <ListInput \r\n          name=\"newPrice\"\r\n          label={labels.price}\r\n          value={(alarm.price / 100).toFixed(2)}\r\n          type=\"number\" \r\n          readonly\r\n        />\r\n        {['eo', 'go'].includes(alarm.type) ? \r\n          <ListInput \r\n            name=\"quantity\"\r\n            label={labels.quantity}\r\n            value={alarm.quantity}\r\n            type=\"number\" \r\n            readonly\r\n          />\r\n        : ''}\r\n        <ListInput \r\n          name=\"offerDays\"\r\n          label={labels.offerDays}\r\n          value={alarm.offerDays}\r\n          type=\"number\" \r\n          readonly\r\n        />\r\n        <ListInput \r\n          name=\"storeName\" \r\n          label={labels.storeName}\r\n          value={storeName}\r\n          type=\"text\" \r\n          readonly\r\n        />\r\n        {['aa', 'eo', 'go'].includes(alarm.type) ?\r\n          <ListItem\r\n            title={labels.newProduct}\r\n            smartSelect\r\n            smartSelectParams={{\r\n              openIn: \"popup\", \r\n              closeOnSelect: true, \r\n              searchbar: true, \r\n              searchbarPlaceholder: labels.search,\r\n              popupCloseLinkText: labels.close\r\n            }}\r\n          >\r\n            <select name=\"newPackId\" value={newPackId} onChange={e => setNewPackId(e.target.value)}>\r\n              <option value=\"\"></option>\r\n              {packs.map(p => \r\n                <option key={p.id} value={p.id}>{p.name}</option>\r\n              )}\r\n            </select>\r\n          </ListItem>\r\n        : ''}\r\n      </List>\r\n      <BlockTitle>\r\n        {labels.prices}\r\n      </BlockTitle>\r\n        <List mediaList>\r\n        {prices.map(p => \r\n          <ListItem \r\n            title={p.storeInfo.name}\r\n            subtitle={p.quantity ? `${labels.quantity}: ${p.quantity}` : ''}\r\n            text={moment(p.time).fromNow()} \r\n            after={(p.price / 100).toFixed(2)} \r\n            key={i++} \r\n          />\r\n        )}\r\n      </List>\r\n      <Toolbar bottom>\r\n        <BottomToolbar/>\r\n      </Toolbar>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default AlarmDetails\r\n","C:\\projects\\aedokkaneh\\src\\pages\\requested-packs.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\add-store-payment.tsx",["445"],"import { useState, useContext, useEffect } from 'react'\r\nimport { f7, Page, Navbar, List, ListInput, Fab, Icon, ListItem } from 'framework7-react'\r\nimport { StoreContext } from '../data/store'\r\nimport { addStorePayment, showMessage, showError, getMessage } from '../data/actionst'\r\nimport labels from '../data/labels'\r\nimport { paymentTypes } from '../data/config'\r\n\r\ninterface Props {\r\n  id: string\r\n}\r\nconst AddStorePayment = (props: Props) => {\r\n  const { state } = useContext(StoreContext)\r\n  const [error, setError] = useState('')\r\n  const [store] = useState(() => state.stores.find(s => s.id === props.id)!)\r\n  const [amount, setAmount] = useState('')\r\n  const [type, setType] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [paymentDate, setPaymentDate] = useState([new Date()])\r\n  const [paymentDateErrorMessage, setPaymentDateErrorMessage] = useState('')\r\n  // useEffect(() => {\r\n  //   const validateDate = value => {\r\n  //     if (new Date(value) > new Date()){\r\n  //       setPaymentDateErrorMessage(labels.invalidSpendingDate)\r\n  //     } else {\r\n  //       setPaymentDateErrorMessage('')\r\n  //     }\r\n  //   }\r\n  //   if (paymentDate.length > 0) validateDate(paymentDate)\r\n  //   else setPaymentDateErrorMessage('')\r\n  // }, [paymentDate])\r\n  useEffect(() => {\r\n    if (error) {\r\n      showError(error)\r\n      setError('')\r\n    }\r\n  }, [error])\r\n  const handleSubmit = () => {\r\n    try{\r\n      if (Number(amount) <= 0 || Number(amount) !== Number(Number(amount).toFixed(2))) {\r\n        throw new Error('invalidValue')\r\n      }\r\n      // const formatedDate = paymentDate.length > 0 ? new Date(paymentDate) : ''\r\n      const formatedDate = new Date()\r\n      const payment = {\r\n        type,\r\n        storeId: store.id!,\r\n        description,\r\n        amount: +amount * 100,\r\n        paymentDate: formatedDate,\r\n        time: new Date()\r\n      }\r\n      addStorePayment( payment, state.stores)\r\n      showMessage(labels.addSuccess)\r\n      f7.views.current.router.back()\r\n    } catch(err) {\r\n\t\t\tsetError(getMessage(f7.views.current.router.currentRoute.path, err))\r\n\t\t}\r\n  }\r\n  return (\r\n    <Page>\r\n      <Navbar title={`${labels.addPayment} ${store.name}`} backLink={labels.back} />\r\n      <List form inlineLabels>\r\n      <ListItem\r\n          title={labels.type}\r\n          smartSelect\r\n          smartSelectParams={{\r\n            openIn: \"popup\", \r\n            closeOnSelect: true, \r\n            searchbar: true, \r\n            searchbarPlaceholder: labels.search,\r\n            popupCloseLinkText: labels.close\r\n          }}\r\n        >\r\n          <select name=\"type\" value={type} onChange={e => setType(e.target.value)}>\r\n            <option value=\"\"></option>\r\n            {paymentTypes.map(t => \r\n              t.id === '1' ? '' : <option key={t.id} value={t.id}>{t.name}</option>\r\n            )}\r\n          </select>\r\n        </ListItem>\r\n        <ListInput \r\n          name=\"amount\" \r\n          label={labels.amount}\r\n          clearButton \r\n          type=\"number\" \r\n          value={amount} \r\n          onChange={e => setAmount(e.target.value)}\r\n          onInputClear={() => setAmount('')}\r\n        />\r\n        <ListInput \r\n          name=\"description\" \r\n          label={labels.description}\r\n          clearButton \r\n          type=\"text\" \r\n          value={description} \r\n          onChange={e => setDescription(e.target.value)}\r\n          onInputClear={() => setDescription('')}\r\n        />\r\n        <ListInput\r\n          name=\"paymentDate\"\r\n          label={labels.paymentDate}\r\n          type=\"datepicker\"\r\n          value={paymentDate} \r\n          clearButton\r\n          errorMessage={paymentDateErrorMessage}\r\n          errorMessageForce\r\n          onCalendarChange={value => setPaymentDate(value)}\r\n          onInputClear={() => setPaymentDate([])}\r\n        />\r\n      </List>\r\n      {!amount || !type || !paymentDate || paymentDateErrorMessage? '' :\r\n        <Fab position=\"left-top\" slot=\"fixed\" color=\"green\" className=\"top-fab\" onClick={() => handleSubmit()}>\r\n          <Icon material=\"done\"></Icon>\r\n        </Fab>\r\n      }\r\n    </Page>\r\n  )\r\n}\r\nexport default AddStorePayment\r\n","C:\\projects\\aedokkaneh\\src\\pages\\panel.tsx",[],"C:\\projects\\aedokkaneh\\src\\pages\\requested-pack-details.tsx",[],{"ruleId":"446","replacedBy":"447"},{"ruleId":"448","replacedBy":"449"},{"ruleId":"446","replacedBy":"447"},{"ruleId":"448","replacedBy":"449"},{"ruleId":"450","severity":1,"message":"451","line":1,"column":48,"nodeType":"452","messageId":"453","endLine":1,"endColumn":56},{"ruleId":"450","severity":1,"message":"454","line":22,"column":28,"nodeType":"452","messageId":"453","endLine":22,"endColumn":47},{"ruleId":"450","severity":1,"message":"455","line":12,"column":36,"nodeType":"452","messageId":"453","endLine":12,"endColumn":63},{"ruleId":"450","severity":1,"message":"455","line":19,"column":36,"nodeType":"452","messageId":"453","endLine":19,"endColumn":63},{"ruleId":"456","severity":1,"message":"457","line":15,"column":6,"nodeType":"458","endLine":15,"endColumn":45,"suggestions":"459"},{"ruleId":"450","severity":1,"message":"460","line":23,"column":10,"nodeType":"452","messageId":"453","endLine":23,"endColumn":18},{"ruleId":"450","severity":1,"message":"461","line":19,"column":35,"nodeType":"452","messageId":"453","endLine":19,"endColumn":61},"no-native-reassign",["462"],"no-negated-in-lhs",["463"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setFileErrorMessage' is assigned a value but never used.","'setSpendingDateErrorMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'f7.views.current.router'. Either exclude it or remove the dependency array. Outer scope values like 'f7.views.current.router' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["464"],"'userInfo' is assigned a value but never used.","'setPaymentDateErrorMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"465","fix":"466"},"Update the dependencies array to be: [state.basket]",{"range":"467","text":"468"},[758,797],"[state.basket]"]